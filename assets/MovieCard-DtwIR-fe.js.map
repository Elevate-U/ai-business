{"version":3,"file":"MovieCard-DtwIR-fe.js","sources":["../../src/components/MovieCard.jsx"],"sourcesContent":["import { h } from 'preact';\nimport { Link } from 'preact-router/match';\nimport { useStore } from '../store';\nimport { useAuth } from '../context/Auth';\nimport './MovieCard.css';\nimport { getProxiedImageUrl, IMAGE_BASE_URL } from '../config';\n\nconst MovieCard = ({ item, type, progress, duration, showDeleteButton, onDelete }) => {\n    // Destructure all needed properties from item\n    const {\n        id,\n        title,\n        name,\n        poster_path,\n        still_path,\n        vote_average,\n        episode_name,\n        season_number,\n        episode_number,\n        first_air_date,\n        release_date,\n        number_of_seasons\n    } = item;\n\n    // Use episode still_path first, fallback to series poster_path for the image\n    const imagePath = still_path || poster_path;\n    const seriesTitle = name || title;\n\n    // Calculate progress percentage\n    const progressPercent = (progress && duration > 0) ? (progress / duration) * 100 : 0;\n\n    // Calculate year from release date\n    const year = (release_date || first_air_date) ? new Date(release_date || first_air_date).getFullYear() : null;\n\n    const { user } = useAuth();\n    const { addFavorite, removeFavorite, isFavorited, favoritesFetched } = useStore();\n    \n   \n    const favorited = isFavorited(item.id, type, item.season_number, item.episode_number);\n\n    const handleFavoriteClick = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (favorited) {\n            removeFavorite(item.id, type, item.season_number, item.episode_number);\n        } else {\n            addFavorite({ ...item, type });\n        }\n    };\n\n    let link = `/watch/${type}/${item.id}`;\n    if (type === 'tv' && item.season_number && item.episode_number) {\n        link += `/season/${item.season_number}/episode/${item.episode_number}`;\n    }\n\n    // Determine what to show in subtitle based on context\n    const getSubtitleText = () => {\n        if (type === 'tv' && season_number && episode_number) {\n            // This is a specific episode (from watch history/favorites)\n            return `S${season_number} E${episode_number}${episode_name ? `: ${episode_name}` : ''}`;\n        } else if (type === 'tv' && number_of_seasons) {\n            // This is a TV show listing - show year and season count\n            return `${year || 'Unknown'} • ${number_of_seasons} Season${number_of_seasons !== 1 ? 's' : ''}`;\n        } else if (type === 'movie' && year) {\n            // This is a movie - show just the year\n            return year.toString();\n        }\n        return null;\n    };\n\n    const subtitleText = getSubtitleText();\n\n    return (\n        <div className=\"movie-card-container\">\n            <Link href={link} className=\"movie-card\">\n                <div className=\"poster-wrapper\">\n                    <img \n                        src={getProxiedImageUrl(imagePath ? `${IMAGE_BASE_URL}${imagePath}` : 'https://via.placeholder.com/500x750/1a1a1a/ffffff?text=No+Image')} \n                        alt={seriesTitle} \n                        loading=\"lazy\" \n                    />\n                    {/* Gradient overlay for text readability */}\n                    <div className=\"scrim\"></div>\n                    {/* Progress bar appears for all watched content */}\n                    {progressPercent > 0.01 && (\n                        <div className=\"progress-bar-container\">\n                            <div className=\"progress-bar\" style={{ width: `${Math.min(progressPercent, 100)}%` }}></div>\n                        </div>\n                    )}\n                    <div className=\"card-info\">\n                        {/* Standardized Title Display */}\n                        <div className=\"title-row\">\n                            <h3 className=\"card-title\">{seriesTitle}</h3>\n                            {user && (\n                                <button\n                                    className={`favorite-btn ${favorited ? 'favorited' : ''}`}\n                                    onClick={handleFavoriteClick}\n                                    aria-label={favorited ? 'Remove from favorites' : 'Add to favorites'}\n                                    disabled={!favoritesFetched}\n                                >\n                                    ♥︎\n                                </button>\n                            )}\n                        </div>\n                        {subtitleText && (\n                            <p className=\"card-subtitle\">{subtitleText}</p>\n                        )}\n                        <span className=\"rating\">★ {vote_average ? vote_average.toFixed(1) : 'N/A'}</span>\n                    </div>\n                    {showDeleteButton && (\n                        <button\n                            className=\"delete-btn\"\n                            onClick={(e) => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                if (onDelete) onDelete(item);\n                            }}\n                        >\n                            &times;\n                        </button>\n                    )}\n                </div>\n            </Link>\n        </div>\n    );\n};\n\nexport default MovieCard; "],"names":["MovieCard","item","type","progress","duration","showDeleteButton","onDelete","id","title","name","poster_path","still_path","vote_average","episode_name","season_number","episode_number","first_air_date","release_date","number_of_seasons","imagePath","seriesTitle","progressPercent","year","user","useAuth","addFavorite","removeFavorite","isFavorited","favoritesFetched","useStore","favorited","handleFavoriteClick","e","link","subtitleText","jsx","Link","jsxs","getProxiedImageUrl","IMAGE_BASE_URL"],"mappings":"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"}