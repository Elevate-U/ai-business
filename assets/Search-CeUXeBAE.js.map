{"version":3,"file":"Search-CeUXeBAE.js","sources":["../../src/pages/Search.jsx"],"sourcesContent":["import { h } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport MovieCard from '../components/MovieCard';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport './Home.css'; // Re-use some styling\nimport { API_BASE_URL } from '../config';\n\nconst SearchPage = (props) => {\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.url?.split('?')[1] || '');\n    const q = urlParams.get('q');\n    setQuery(q || '');\n\n    if (q) {\n      performSearch(q);\n    } else {\n      setResults([]);\n    }\n  }, [props.url]);\n\n  const performSearch = async (searchQuery) => {\n    setLoading(true);\n    try {\n      const res = await fetch(`${API_BASE_URL}/tmdb/search/multi?query=${encodeURIComponent(searchQuery)}`);\n      const data = await res.json();\n      if (data && data.results) {\n        const validResults = data.results.filter(item => (item.media_type === 'movie' || item.media_type === 'tv') && item.poster_path);\n        const uniqueResults = validResults.filter((item, index, self) =>\n            index === self.findIndex((t) => t.id === item.id && t.media_type === item.media_type)\n        );\n        setResults(uniqueResults);\n      }\n    } catch (error) {\n      console.error(\"Error performing search:\", error);\n      setResults([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div class=\"container home-page\">\n      <div class=\"search-header\">\n        <h1 class=\"main-title\">Search Results</h1>\n        <div class=\"search-query-display\">\n          <span class=\"search-label\">Showing results for:</span>\n          <span class=\"search-query\">\"{query}\"</span>\n        </div>\n      </div>\n      \n      {loading ? (\n        <LoadingSpinner text=\"Searching for movies and TV shows...\" />\n      ) : (\n        results.length > 0 ? (\n          <section class=\"home-section\">\n            <h2>Found {results.length} result{results.length !== 1 ? 's' : ''}</h2>\n            <div class=\"movie-grid\">\n              {results.map(item => (\n                <MovieCard \n                  key={`${item.media_type}-${item.id}`} \n                  item={item} \n                  type={item.media_type} \n                  progress={null}\n                  duration={null}\n                />\n              ))}\n            </div>\n          </section>\n        ) : query ? (\n          <div class=\"no-results\">\n            <div class=\"no-results-icon\">üîç</div>\n            <h3>No results found</h3>\n            <p>We couldn't find anything for \"{query}\". Try searching with different keywords.</p>\n            <div class=\"search-suggestions\">\n              <p>Try searching for:</p>\n              <ul>\n                <li>Movie or TV show titles</li>\n                <li>Actor or director names</li>\n                <li>Genre names (e.g., \"action\", \"comedy\")</li>\n                <li>Keywords from the plot</li>\n              </ul>\n            </div>\n          </div>\n        ) : (\n          <div class=\"search-welcome\">\n            <div class=\"search-welcome-icon\">üé¨</div>\n            <h3>Start your search</h3>\n            <p>Use the search bar above to find your favorite movies and TV shows.</p>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default SearchPage; "],"names":["SearchPage","props","results","setResults","useState","loading","setLoading","query","setQuery","useEffect","q","performSearch","searchQuery","data","API_BASE_URL","uniqueResults","item","index","self","t","error","jsxs","jsx","LoadingSpinner","MovieCard"],"mappings":"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"}