import{a as vs,s as Je,b as ys,e as bs,$ as Y,A,f as _s,h as ws,i as Ke,j as Qe,u as e,k as Xe,I as Ze}from"./index-B_gc-6eg.js";import{d,A as v,y as w,T as $s,q as Ss,k as Es}from"./react-vendor-BYlzYzcd.js";import{H as Ts}from"./Helmet-BtofYT-N.js";import{M as Ps}from"./MovieCard-BWxubO6M.js";import{r as ks,a as Is}from"./favorites-CubjwWEv.js";/* empty css                  */const Os=es=>{const[u,re]=d(null),[we,$e]=d([]),[Se,Ee]=d([]),[E,j]=d(""),[ss,te]=d(!0),[As,Ls]=d(!1);v(null);const[g,q]=d(null),[h,z]=d(null),[L,Te]=d("videasy"),[Pe,rs]=d(["videasy","vidsrc","embedsu"]),[V,ke]=d(null),[ts,Ie]=d(!1),[B,ns]=d(!1),[C,N]=d(null),[Ae,Le]=d(!1),[Ue,G]=d(!1),k=v(),[Re,Us]=d(null),{id:l,type:r,season:U,episode:R}=es.matches,[I,F]=d(r==="anime"?null:l),[x,ne]=d(r==="anime"?"anime":r),[os,oe]=d(!1),[W,ae]=d(!1),[Ce,ie]=d([]),le=v(null),[as,O]=d([]),[S,J]=d(null),[ce,K]=d(!1),[D,Rs]=d(0),[de,Q]=d(1),[ue,xe]=d(1),[me,Me]=d(!1),M=10,X=v(!1),ge=v(null),he=v(!1),fe=v(!1),is=v(!1),ls=v(null),cs=v(!1),Z=v(new Set),ds=v(0);v(0);const pe=v(null);v({});const ee=v(0),{user:De}=vs(),b=De?.id,se="tv";w(()=>{(async()=>{const{data:{session:n},error:i}=await Je.auth.getSession();i?console.error("🔍 Auth check error:",i):n?console.log("🔍 Auth status: Authenticated user",n.user.id):console.log("🔍 Auth status: No active session")})()},[]);const{setCurrentMediaItem:ve,favoritesFetched:Ne,fetchContinueWatching:us,isShowFavorited:ms}=ys();w(()=>{if(r==="tv"||r==="anime")if(U&&R&&!isNaN(parseInt(U))&&!isNaN(parseInt(R))){const n=parseInt(U,10),i=parseInt(R,10);q(n),z(i)}else q(1),z(1);else q(null),z(null)},[r,U,R]);const Fe=$s(()=>r!=="movie"||!S||!S.progress_seconds||S.progress_seconds<=0?0:S.duration_seconds>0?Math.min(100,S.progress_seconds/S.duration_seconds*100):S.progress_seconds>30?5:2,[r,S]),We=Ss((s,n)=>{if(!s||!n)return 1;const i=Math.ceil(s/M);return Math.max(1,Math.min(i,Math.ceil(n/M)))},[M]),Oe=v(b);w(()=>{Oe.current=b},[b]);const gs=()=>{we.find(n=>n.type==="Trailer"&&n.site==="YouTube")?oe(!0):alert("No trailer available for this movie.")};w(()=>()=>{Z.current.forEach(s=>clearTimeout(s)),Z.current.clear()},[g,h]),w(()=>{const s=async()=>{if(document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement){console.log("📱 Entered fullscreen mode, refreshing session...");try{const{data:i,error:t}=await Je.auth.refreshSession();t?console.warn("⚠️ Session refresh failed in fullscreen:",t.message):console.log("✅ Session refreshed successfully in fullscreen")}catch(i){console.warn("⚠️ Session refresh error in fullscreen:",i)}}else console.log("📱 Exited fullscreen mode, syncing progress..."),setTimeout(()=>{bs(b).catch(i=>{console.error("Error syncing offline progress after fullscreen:",i)})},1e3)};return document.addEventListener("fullscreenchange",s),document.addEventListener("webkitfullscreenchange",s),document.addEventListener("mozfullscreenchange",s),()=>{document.removeEventListener("fullscreenchange",s),document.removeEventListener("webkitfullscreenchange",s),document.removeEventListener("mozfullscreenchange",s)}},[b]),w(()=>(u&&ve({...u,type:r}),()=>{ve(null)}),[u,r,ve]),w(()=>{if(!l||!r){Y("/");return}r==="anime"?(ne("anime"),F(null)):(F(l),ne(r))},[l,r]),w(()=>{if(r!=="anime"&&!I||r==="anime"&&!l)return;j(""),ae(!1),ie([]),re(null),te(!0),O([]),he.current=!1,fe.current=!1,is.current=!1,ls.current=null,cs.current=!1,Q(1),Me(!1),Z.current.forEach(n=>clearTimeout(n)),Z.current.clear(),ds.current=0,pe.current=null,(async()=>{te(!0);try{const n=new AbortController,i=setTimeout(()=>n.abort(),15e3),t=l,f=r==="anime"?`${A}/tmdb/anime/${t}/enhanced`:`${A}/tmdb/${x}/${I}`,c=r==="anime"?null:`${A}/tmdb/${x}/${I}/videos`,o=r==="anime"?`${A}/tmdb/anime/${t}/recommendations`:`${A}/tmdb/${x}/${I}/recommendations`,a=async(y,T)=>{if(!y)return null;try{const $=await fetch(y,{signal:n.signal});if(!$.ok)throw new Error(`HTTP ${$.status}: ${$.statusText}`);const P=await $.json();return r==="anime"&&P._conversion?.tmdbId&&F(P._conversion.tmdbId),r==="anime"&&P.tmdb_id&&F(P.tmdb_id),P}catch($){if(console.error(`${T}:`,$),T.includes("videos")||T.includes("recommendations"))return{results:[]};throw $}};let p,m,_;r==="anime"?(p=await a(f,"Error fetching anime details"),m={results:p?.videos?.results||[]},_=await a(o,"Error fetching recommendations")):[p,m,_]=await Promise.all([a(f,"Error fetching media details"),a(c,"Error fetching videos"),a(o,"Error fetching recommendations")]),clearTimeout(i),re(p),$e(m.results||[]),Ee(_.results||[])}catch{re(null),$e([]),Ee([])}finally{te(!1)}})()},[I,x,U,R,b]),w(()=>{(async()=>{if(!b||!u||!l||!r){r==="movie"?J(null):(r==="tv"||r==="anime")&&O([]);return}try{if((r==="tv"||r==="anime")&&u.seasons&&u.seasons.length>0&&!(U&&R&&!isNaN(parseInt(U))&&!isNaN(parseInt(R)))&&!fe.current&&g!==null&&h!==null){console.log("🎬 Checking for continue watching episode...");const t=await _s(b,l,se);t&&t.season_number&&t.episode_number?(console.log(`🔄 Continue watching: S${t.season_number}E${t.episode_number}`),setTimeout(()=>{q(t.season_number),z(t.episode_number);const f=`/watch/${r}/${l}/season/${t.season_number}/episode/${t.episode_number}`;Y(f,!0)},100)):console.log("📭 No continue watching data found, starting from beginning"),fe.current=!0}if(r==="tv"||r==="anime"){const i=await ws(b,l,se);console.log(`📺 [Watch] Series history loaded for ${r} ${l}:`,i),O(i)}const n=await Ke(b,l,r);console.log("Progress data loaded:",n),J(n)}catch(n){console.error("Error loading user-specific data:",n)}})()},[b,u,l,r,U,R,se]),w(()=>{g!==null&&!me&&Q(1)},[g]),w(()=>{(async()=>{if(r!=="tv"&&r!=="anime"||!g||g===null)return;const n=r==="anime"?l:I;if(n){Ie(!0);try{const i=r==="anime"?`${A}/tmdb/anime/${n}/season/${g}`:`${A}/tmdb/${x}/${n}/season/${g}`,t=await fetch(i);if(!t.ok)throw new Error(`Failed to fetch season details: ${t.statusText}`);const f=await t.json();if(ke(f),!me){const c=f.episodes.length,o=We(h,c);Q(o),Me(!0)}}catch(i){console.error("Error fetching season details:",i),ke(null)}finally{Ie(!1)}}})()},[l,r,se,g,h,me,We]),w(()=>{const s=`${g}-${h}`,n=ge.current&&ge.current!==s;if(ge.current=s,X.current&&!n){X.current=!1;return}n&&(X.current=!1),(async()=>{if(!I||!x)return;const t=r==="anime"?l:I;if(!t)return;N(null),G(!1),k.current&&clearTimeout(k.current),k.current=setTimeout(()=>G(!0),1e4);const f=r==="anime"&&u&&(!u.seasons||u.seasons.length===0);if((r==="tv"||r==="anime")&&!f&&(g===null||h===null)){console.log("Season/episode not set, aborting stream URL fetch."),clearTimeout(k.current);return}try{let c=`${A}/stream-url?type=${r}&id=${t}&source=${L}`;(r==="tv"||r==="anime"&&!f)&&(c+=`&season=${g}&episode=${h}`),r==="anime"&&B&&(c+="&dub=true"),L==="videasy"&&(D>0&&(c+=`&progress=${Math.round(D)}`),(r==="tv"||r==="anime")&&(c+="&nextEpisode=true&episodeSelector=true&autoplayNextEpisode=true")),console.log(`Fetching stream URL: ${c}`);const o=await fetch(c);if(!o.ok)throw new Error(`Server responded with ${o.status}`);const a=await o.json();if(clearTimeout(k.current),a.url)console.log(`Stream URL generated: ${a.url}`),j(a.url),ae(a.isDirectSource||!1),ie(a.qualities||[]),a.availableSources&&a.availableSources.length>0&&rs(a.availableSources),a.currentSource&&(X.current=!0,Te(a.currentSource)),N(null),K(!0);else throw new Error(a.message||"No stream URL returned from API")}catch(c){clearTimeout(k.current),console.error("Error fetching stream URL:",c.message),N(`Failed to load video: ${c.message}. Try changing the source or refreshing.`),K(!1)}})()},[I,x,g,h,L,B,u,D,b]),w(()=>{const s=Oe.current;if(s&&console.log("🔐 Progress tracking setup:",{hasUser:!0,userId:s,hasMediaDetails:!!u}),!s||!u){s&&!u&&console.log("⚠️ Progress tracking disabled - media details not yet available");return}const n=async(t,f)=>{console.log(`📊 Progress update received via ${f}: `,t);const c=t.season||g,o=t.episode||h;if(t&&t.progress>=0&&t.duration>0){const a=Date.now();if(a-ee.current<1e3)return;ee.current=a;try{console.log(`🎬 Attempting to save progress for ${r} ${l}:`,{progress:t.progress,duration:t.duration,season:c,episode:o});const p=await Qe(s,{...u,id:u.id,type:r,season:c,episode:o},t.progress,t.duration).catch(m=>{if(console.error("❌ Progress save error caught:",m),m.message?.includes("timeout")||m.message?.includes("auth")){const _=`offline_progress_${r}_${l}_${c||0}_${o||0}`,y={media_id:l,media_type:r,season_number:c,episode_number:o,progress_seconds:t.progress,duration_seconds:t.duration,timestamp:new Date().toISOString()};return localStorage.setItem(_,JSON.stringify(y)),console.log("📱 Saved to localStorage after error"),!0}return!1});if(p){if(console.log("✅ Progress saved successfully"),us(),c===g&&o===h){const m=typeof p=="object"&&p.progress_seconds!==void 0?p:{progress_seconds:t.progress,duration_seconds:t.duration};console.log("📊 Using progress data for state update:",m),r==="movie"?J(m):(r==="tv"||r==="anime")&&O(_=>{const y=[..._],T=y.findIndex(P=>P.season_number===c&&P.episode_number===o),$={media_id:parseInt(l,10),media_type:r,season_number:c,episode_number:o,progress_seconds:m.progress_seconds,duration_seconds:m.duration_seconds};return T>-1?y[T]={...y[T],...$}:y.push($),y})}}else console.error("❌ Failed to save progress, will retry on next update")}catch(p){console.error("❌ An unexpected error occurred while saving progress:",p);try{const m=`offline_progress_${r}_${l}_${c||0}_${o||0}`,_={media_id:l,media_type:r,season_number:c,episode_number:o,progress_seconds:t.progress,duration_seconds:t.duration,timestamp:new Date().toISOString()};localStorage.setItem(m,JSON.stringify(_)),console.log("📱 Saved to localStorage after exception")}catch(m){console.error("💔 All save mechanisms failed:",m)}}}else console.log("⚠️ Progress update ignored (insufficient data):",{hasProgressData:!!t,progress:t?.progress,duration:t?.duration,meetsThreshold:t?.progress>=0&&t?.duration>0})};let i;if(W){const t=le.current;if(!t)return;const f=async()=>{const o=await Ke(b,l,r,g,h);o&&o.progress_seconds&&(t.currentTime=o.progress_seconds)},c=async()=>{if(t.currentTime>0){const o=Date.now();if(o-ee.current<1e3)return;ee.current=o;const a={progress:Math.round(t.currentTime),duration:Math.round(t.duration),percentage:t.duration>0?t.currentTime/t.duration*100:0};console.log("🎬 Direct video - saving progress:",a);const p=await Qe(b,{...u,id:u.id,type:r,season:g,episode:h},a.progress,a.duration);if(p){console.log("✅ Direct video progress saved successfully");const m=typeof p=="object"&&p.progress_seconds!==void 0?p:{progress_seconds:a.progress,duration_seconds:a.duration};console.log("📊 Using direct video progress data for state update:",m),r==="movie"?J(m):(r==="tv"||r==="anime")&&O(_=>{const y=[..._],T=y.findIndex(P=>P.season_number===g&&P.episode_number===h),$={media_id:parseInt(l,10),media_type:r,season_number:g,episode_number:h,progress_seconds:m.progress_seconds,duration_seconds:m.duration_seconds};return T>-1?y[T]={...y[T],...$}:y.push($),y})}else console.error("❌ Failed to save direct video progress")}};return t.addEventListener("loadedmetadata",f),t.addEventListener("timeupdate",c),()=>{t.removeEventListener("loadedmetadata",f),t.removeEventListener("timeupdate",c)}}else return i=t=>{const f=["player.videasy.net","vidsrc.to","embed.su","vidsrc.xyz","vidsrc.in","vidsrc.pm"],c=new URL(t.origin);if(f.includes(c.hostname))try{const o=typeof t.data=="string"?JSON.parse(t.data):t.data;if(o&&o.type==="PROGRESS_UPDATE"&&o.data){const a={progress:o.data.progress?.watched,duration:o.data.progress?.duration,season:o.data.season||g,episode:o.data.episode||h};n(a,"PROGRESS_UPDATE");return}if(o.type==="MEDIA_DATA"&&o.data){let a=o.data;if(typeof a=="string")try{a=JSON.parse(a)}catch(_){console.error("Error parsing double-encoded MEDIA_DATA string:",_);return}const p=`${r}-${l}`,m=a[p];if(m&&m.progress){const _={progress:m.progress.watched,duration:m.progress.duration,season:m.last_season_watched,episode:m.last_episode_watched};n(_,"MEDIA_DATA")}return}if(o.type==="PLAYER_EVENT"&&o.data)if(o.data.event==="timeupdate"){const a={progress:o.data.time,duration:o.data.duration};a.progress&&a.duration&&n(a,"PLAYER_EVENT")}else o.data.event==="ended"&&(r==="tv"||r==="anime")?console.log('Player reported "ended" event - Videasy will handle next episode automatically.'):o.data.event==="player_ready"&&(console.log("Player is ready."),K(!0))}catch(o){console.error("Error processing message from player:",{origin:t.origin,data:t.data,error:o.message})}},window.addEventListener("message",i),()=>{window.removeEventListener("message",i)}},[u,W,le,g,h,b]),w(()=>{if(E&&!W&&!ce){const s=setTimeout(()=>{ce||(console.warn("Player ready timeout, starting fallback progress tracking."),hs())},1e4);return()=>clearTimeout(s)}},[E,W,ce]);const hs=()=>{const s=setInterval(()=>{document.hasFocus()&&console.log("Fallback: Checking for progress...")},15e3);return()=>clearInterval(s)};if(w(()=>(G(!1),!E&&!C&&(k.current=setTimeout(()=>{G(!0),console.log("Stream timeout error")},25e3)),()=>{k.current&&clearTimeout(k.current)}),[E,C,g,h,L]),Re)return e("div",{class:"container",style:{textAlign:"center",marginTop:"50px"},children:e("div",{class:"error-state",children:[e("h2",{children:"An Error Occurred"}),e("p",{children:Re}),e("button",{onClick:()=>Y("/"),class:"btn btn-primary",children:"Go Home"})]})});if(ss)return e("div",{class:"loading-state",children:[e("div",{class:"loading-spinner"}),e("p",{children:"Loading media details..."}),e("p",{children:"If your video doesnt load refresh the page or pick a new server."})]});if(!u)return e("div",{class:"container",children:e("div",{class:"error-state",children:[e("h2",{children:"Unable to Load Media"}),e("p",{children:"We couldn't load the details for this content. This could be due to:"}),e("ul",{children:[e("li",{children:"Network connectivity issues"}),e("li",{children:"The content may no longer be available"}),e("li",{children:"Server maintenance"})]}),e("button",{onClick:()=>window.location.reload(),class:"btn btn-primary",style:{marginTop:"20px"},children:"Try Again"})]})});const{title:ye,name:be,overview:fs,vote_average:Cs,release_date:He,first_air_date:H,last_air_date:Ye,runtime:je,number_of_seasons:qe,genres:ze,poster_path:Ve,status:Be}=u,Ge=r==="anime"?l:u.id,_e=ms(Ge,r);(He||H)&&new Date(He||H).getFullYear();const ps=()=>{const s={...u,id:Ge,type:r};_e?ks(s):Is(s)};return e("div",{children:[e(Ts,{children:e("title",{children:[ye||be," - Fovi"]})}),os&&e("div",{className:"trailer-modal",onClick:()=>oe(!1),children:e("div",{className:"trailer-content",onClick:s=>s.stopPropagation(),children:[e("span",{className:"close-trailer",onClick:()=>oe(!1),children:"×"}),e("iframe",{src:`https://www.youtube.com/embed/${we.find(s=>s.type==="Trailer")?.key}?autoplay=1`,frameBorder:"0",allow:"autoplay; encrypted-media; fullscreen",allowFullScreen:!0,title:"Trailer"})]})}),e("div",{class:"player-container",children:[!E&&C&&e("div",{class:"stream-error-message",children:[e("p",{children:C.message}),C.canRetry&&e("div",{class:"error-actions",children:[e("button",{onClick:async()=>{Le(!0),setTimeout(()=>{(async()=>{const n=`${A}/stream-url?type=${r}&id=${l}&source=${L}${r==="tv"||r==="anime"?`&season=${g}&episode=${h}`:""}${r==="anime"?`&dub=${B}`:""}`;try{const i=await fetch(n),t=await i.json();if(i.ok)j(t.url),ae(t.isDirectSource),ie(t.qualities||[]),N(null);else throw new Error(t.message)}catch(i){console.error("Retry failed:",i),N({message:"Retry failed. Please try selecting a different source.",canRetry:!0})}Le(!1)})()},1e3)},disabled:Ae,class:"btn retry-btn",children:Ae?"Retrying...":"Retry"}),e("p",{children:"Or try selecting a different source from the list below."})]})]}),!E&&!C&&!Ue&&e("div",{class:"stream-loading",children:[e("p",{children:"Loading video stream... "}),e("p",{children:"If your video doesnt load refresh the page or pick a new server."})]}),!E&&!C&&Ue&&e("div",{class:"stream-error-message",children:[e("p",{children:"Sorry, this episode failed to load. Please refresh the page."}),e("div",{class:"error-actions",children:[e("button",{onClick:()=>window.location.reload(),class:"btn retry-btn",children:"Refresh"}),e("p",{children:"Or try selecting a different source from the list below if refreshing doesn't work."})]})]}),W?e("video",{ref:le,src:E,controls:!0,autoPlay:!0,width:"100%"}):E&&e("iframe",{src:E,width:"100%",height:"100%",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"},frameBorder:"0",allowFullScreen:!0,allow:"autoplay; fullscreen; picture-in-picture",sandbox:"allow-forms allow-pointer-lock allow-same-origin allow-scripts allow-top-navigation allow-popups allow-popups-to-escape-sandbox",title:"Video Player",loading:"eager",referrerPolicy:"no-referrer-when-downgrade",importance:"high",onLoad:()=>{console.log("🎬 Player iframe loaded"),K(!0),L!=="videasy"&&D>30?setTimeout(()=>{const s=document.querySelector("iframe");if(s&&s.contentWindow)try{s.contentWindow.postMessage({type:"SEEK_TO",time:D},"*"),console.log(`📍 Sent seek command to restore progress: ${D}s`)}catch(n){console.log("Could not send seek command:",n)}},500):console.log(L==="videasy"?"📍 Videasy native resume - no seeking needed":"📍 No significant progress to resume, starting from beginning")}})]}),e("div",{class:"container",children:[e("div",{class:"media-details-layout",children:[e("div",{class:"poster",children:[e("img",{src:Xe(Ve?`${Ze}${Ve}`:"https://via.placeholder.com/500x750.png?text=No+Image"),alt:ye||be}),Fe>0&&e("div",{class:"movie-progress-container",children:[e("div",{class:"movie-progress-bar",children:e("div",{class:"movie-progress",style:{width:`${Math.max(2,Fe)}%`}})}),e("div",{class:"movie-progress-text",children:S.duration_seconds>0?`${Math.floor(S.progress_seconds/60)}m / ${Math.floor(S.duration_seconds/60)}m watched`:`${Math.floor(S.progress_seconds/60)}m watched`})]})]}),e("div",{class:"details",children:[e("div",{class:"title-container",children:[e("h1",{children:ye||be}),e("button",{onClick:ps,class:`favorite-btn ${_e?"favorited":""}`,disabled:!Ne,children:Ne?_e?"♥ Favorited":"♡ Favorite":"..."}),e("button",{onClick:gs,class:"favorite-btn trailer-btn",children:[e("i",{class:"fas fa-film"})," Trailer"]}),!De&&e("span",{class:"login-hint",children:e("small",{children:[e("a",{href:"/login",style:{color:"#007bff",textDecoration:"none"},children:"Log in"})," to save favorites, track progress & continue watching"]})})]}),e("div",{class:"meta",children:[e("span",{class:"rating",children:["★ ",u.vote_average?u.vote_average.toFixed(1):"N/A"]}),(r==="tv"||r==="anime")&&H&&e("span",{style:{marginLeft:8},children:(()=>{const s=H?new Date(H).getFullYear():null;let n=null;return Ye?n=new Date(Ye).getFullYear():Be&&Be.toLowerCase()==="ended"&&(n=s),s&&n&&s===n?`${s}`:s&&n&&n!==s?`${s} - ${n}`:s?`${s} -`:""})()}),je&&e("span",{children:[je," min"]}),qe&&e("span",{children:[qe," Seasons"]})]}),e("div",{class:"genres",children:ze&&ze.map(s=>e("span",{class:"genre-tag",children:s.name}))}),e("p",{class:"overview",children:fs}),Ce.length>0&&e("div",{class:"quality-selector",children:[e("label",{children:"Quality:"}),Ce.map(s=>e("button",{class:`quality-btn ${E===s.url?"active":""}`,onClick:()=>j(s.url),children:[s.quality,"p"]}))]})]})]}),r==="anime"&&e("div",{class:"select-container",children:[e("label",{for:"dub-select",children:"Audio:"}),e("select",{id:"dub-select",value:B,onChange:s=>ns(s.target.value==="true"),children:[e("option",{value:"false",children:"Subbed"}),e("option",{value:"true",children:"Dubbed"})]})]}),e("div",{class:"selectors-container",children:[(r==="tv"||r==="anime")&&u&&u.seasons&&e("div",{class:"select-container",children:[e("label",{children:"Season:"}),e("div",{class:"selector-buttons",children:u.seasons.filter(s=>s.season_number>0).map(s=>e("button",{class:`selector-btn ${g===s.season_number?"active":""}`,onClick:()=>{console.log(`🎯 User manually selected season ${s.season_number}`),he.current=!0,pe.current=null;const n=`/watch/${r}/${l}/season/${s.season_number}/episode/1`;Y(n,!0)},children:s.name},s.id))})]}),Pe.length>1&&e("div",{class:"select-container",children:[e("label",{children:"Source:"}),e("div",{class:"selector-buttons",children:Pe.map(s=>e("button",{class:`selector-btn ${L===s?"active":""}`,onClick:()=>Te(s),children:s},s))})]})]}),(r==="tv"||r==="anime")&&g!==null&&h!==null&&e("div",{class:"episodes-container",children:[e("h3",{children:"Episodes"}),ts?e("div",{class:"loading-spinner"}):e(Es,{children:[e("div",{class:"episode-list",children:V?.episodes?.slice((de-1)*M,de*M)?.map(s=>{const n=as.find(t=>t.season_number===g&&t.episode_number===s.episode_number),i=n&&n.progress_seconds>0?n.duration_seconds&&n.duration_seconds>0?Math.min(100,n.progress_seconds/n.duration_seconds*100):n.progress_seconds>30?5:2:0;return n&&n.progress_seconds>0&&console.log(`📊 Episode ${s.episode_number} progress:`,{progress_seconds:n.progress_seconds,duration_seconds:n.duration_seconds,progressPercent:i}),e("div",{class:`episode-card ${s.episode_number===h?"active":""}`,onClick:()=>{console.log(`🎯 User manually selected episode ${s.episode_number}`),he.current=!0,pe.current=null;const t=`/watch/${r}/${l}/season/${g}/episode/${s.episode_number}`;Y(t,!0)},children:[e("div",{class:"episode-card-image",children:[e("img",{src:Xe(s.still_path?s.still_path.startsWith("/anilist_images/")||s.still_path.startsWith("http")?s.still_path:`${Ze}${s.still_path}`:`https://via.placeholder.com/300x169.png?text=${encodeURIComponent(s.name)}`),alt:s.name}),e("div",{class:"episode-number-badge",children:s.episode_number}),i>0&&e("div",{class:"episode-progress-container",children:[e("div",{class:"episode-progress-bar",children:e("div",{class:"episode-progress",style:{width:`${Math.max(2,i)}%`}})}),e("div",{class:"episode-progress-text",children:n&&n.duration_seconds>0?`${Math.floor(n.progress_seconds/60)}m / ${Math.floor(n.duration_seconds/60)}m`:`${Math.floor(n.progress_seconds/60)}m watched`})]})]}),e("div",{class:"episode-card-content",children:[e("h4",{children:[s.name,s.air_date&&e("span",{style:{color:"#aaa",fontWeight:400,fontSize:"0.95em",marginLeft:8},children:["• ",(()=>{const t=new Date(s.air_date);return isNaN(t)?null:t.toLocaleDateString(void 0,{month:"short",day:"numeric",year:"numeric"})})()]})]}),e("p",{class:"episode-overview",children:s.overview})]})]},s.id)})}),V?.episodes&&V.episodes.length>M&&(()=>{const s=Math.ceil(V.episodes.length/M),n=10,i=Math.ceil(s/n),t=(ue-1)*n+1,f=Math.min(t+n-1,s),c=Array.from({length:f-t+1},(o,a)=>t+a);return e("div",{class:"pagination-controls",children:[ue>1&&e("button",{onClick:()=>xe(o=>o-1),children:e("i",{class:"fas fa-angle-double-left"})}),c.map(o=>e("button",{class:de===o?"active":"",onClick:()=>Q(o),children:o},o)),ue<i&&e("button",{onClick:()=>xe(o=>o+1),children:e("i",{class:"fas fa-angle-double-right"})})]})})()]})]}),Se.length>0&&e("div",{class:"recommendations",children:[e("h2",{children:"More Like This"}),e("div",{class:"movie-grid",children:Se.map(s=>e(Ps,{item:s,type:r,progress:null,duration:null},`${s.media_type||r}-${s.id}`))})]})]})]})};export{Os as default};
//# sourceMappingURL=Watch-BZqmocL5.js.map
