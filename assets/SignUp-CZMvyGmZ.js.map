{"version":3,"file":"SignUp-CZMvyGmZ.js","sources":["../../src/pages/SignUp.jsx"],"sourcesContent":["import { useState } from 'preact/hooks';\nimport { supabase } from '../supabase';\nimport toast from '../components/Toast';\nimport './Auth.css';\n\nexport default function SignUp() {\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSocialLogin = async (provider) => {\n    try {\n      const { error } = await supabase.auth.signInWithOAuth({\n        provider: provider,\n      });\n      if (error) throw error;\n    } catch (error) {\n      toast.error(error.error_description || error.message);\n    }\n  };\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      // Try to sign up\n      const { data, error: signUpError } = await supabase.auth.signUp({\n        email: email,\n        password: password,\n      });\n      // If a user object is returned, try to log in immediately\n      if (data && data.user) {\n        const { error: loginError } = await supabase.auth.signInWithPassword({\n          email: email,\n          password: password,\n        });\n        if (!loginError) {\n          toast.success('Logged in successfully!');\n          window.location.href = '/';\n          return;\n        } else {\n          // User is unconfirmed or password is wrong, show confirmation message\n          toast.success('Check your email for the confirmation link!');\n          return;\n        }\n      }\n      // If error, check if it's because the user already exists\n      if (\n        signUpError &&\n        signUpError.message &&\n        (signUpError.message.toLowerCase().includes('user already registered') ||\n         signUpError.message.toLowerCase().includes('already registered') ||\n         signUpError.message.toLowerCase().includes('already exists'))\n      ) {\n        // Try to log in with the provided password\n        const { error: loginError } = await supabase.auth.signInWithPassword({\n          email: email,\n          password: password,\n        });\n        if (!loginError) {\n          toast.success('Logged in successfully!');\n          window.location.href = '/';\n          return;\n        } else {\n          toast.error('You have already signed up with this email. Please log in.');\n          setTimeout(() => {\n            window.location.href = '/login';\n          }, 1500);\n          return;\n        }\n      }\n      // Other errors\n      if (signUpError) {\n        toast.error(signUpError.error_description || signUpError.message);\n      }\n    } catch (error) {\n      toast.error(error.error_description || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      \n      <div className=\"auth-form\">\n        <h1 className=\"auth-header\">Create an account</h1>\n        <p className=\"description\">Sign up for a new account.</p>\n        <form onSubmit={handleSignUp}>\n          <div className=\"input-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              className=\"input-field\"\n              type=\"email\"\n              placeholder=\"Your email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              id=\"password\"\n              className=\"input-field\"\n              type=\"password\"\n              placeholder=\"Your password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div>\n            <button className=\"button\" disabled={loading}>\n              {loading ? <span>Loading...</span> : <span>Sign Up</span>}\n            </button>\n          </div>\n        </form>\n\n        <div className=\"auth-divider\">\n          <span>OR</span>\n        </div>\n\n        <div className=\"social-login-group\">\n          <button\n            type=\"button\"\n            className=\"social-button google\"\n            onClick={() => handleSocialLogin('google')}\n          >\n            Sign up with Google\n          </button>\n        </div>\n\n        <div className=\"auth-links\">\n          <p>\n            Already have an account?\n            <a href=\"/login\" className=\"auth-link\"> Log in</a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":["SignUp","loading","setLoading","useState","email","setEmail","password","setPassword","handleSocialLogin","provider","error","supabase","toast","jsxs","jsx","e","data","signUpError","loginError"],"mappings":"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"}