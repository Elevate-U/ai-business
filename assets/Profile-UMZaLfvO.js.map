{"version":3,"file":"Profile-UMZaLfvO.js","sources":["../../src/pages/Profile.jsx"],"sourcesContent":["import { h } from 'preact';\nimport { useState, useRef, useEffect } from 'preact/hooks';\nimport { route } from 'preact-router';\nimport { useAuth } from '../context/Auth';\nimport { supabase } from '../supabase';\nimport toast from '../components/Toast';\nimport './Profile.css';\nimport { getProxiedImageUrl } from '../config';\n\n// Move this function above Profile so it's defined before use\nconst getAvatarUrl = (profile, user) => {\n  if (profile?.avatar_url) return getProxiedImageUrl(profile.avatar_url);\n  if (user?.user_metadata?.picture) return getProxiedImageUrl(user.user_metadata.picture);\n  if (user?.user_metadata?.avatar_url) return getProxiedImageUrl(user.user_metadata.avatar_url);\n  return '/assets/default-avatar.png';\n};\n\nconst Profile = () => {\n  const { user, profile, updateUser } = useAuth();\n  // Initialize fullName from profile or user, which are now reliable\n  const [fullName, setFullName] = useState(profile?.full_name || user?.user_metadata?.full_name || '');\n  const [avatarUrl, setAvatarUrl] = useState(() => getAvatarUrl(profile, user));\n  const [avatarFile, setAvatarFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [saveState, setSaveState] = useState('Save Changes');\n  const fileInputRef = useRef();\n\n  // This effect now primarily syncs the avatar URL when the profile changes.\n  // The full name input is controlled directly and updated via context.\n  useEffect(() => {\n    setAvatarUrl(getAvatarUrl(profile, user));\n    // Also, ensure fullName is in sync if the profile object itself is replaced\n    if (profile?.full_name !== fullName) {\n      setFullName(profile.full_name || '');\n    }\n  }, [profile, user]);\n\n  if (!user) {\n    return <div className=\"profile-container\"><div className=\"profile-form\"><h2>Not logged in</h2></div></div>;\n  }\n  \n  const handleNameChange = (e) => setFullName(e.target.value);\n\n  const handleAvatarChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!file.type.startsWith('image/')) {\n      toast.error('Please select a valid image file.');\n      return;\n    }\n    if (file.size > 50 * 1024 * 1024) {\n      toast.error('Avatar must be less than 50MB.');\n      return;\n    }\n    setAvatarFile(file);\n    const reader = new FileReader();\n    reader.onload = (ev) => setAvatarUrl(ev.target.result);\n    reader.readAsDataURL(file);\n  };\n\n  const handleSave = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setSaveState('Saving...');\n\n    try {\n      let newAvatarUrl = null;\n\n      // 1. If a new avatar is selected, upload it first.\n      if (avatarFile) {\n        const fileExt = avatarFile.name.split('.').pop();\n        const filePath = `${user.id}/avatar.${fileExt}`;\n\n        const { error: uploadError } = await supabase.storage\n          .from('avatars')\n          .upload(filePath, avatarFile, {\n            upsert: true,\n            cacheControl: '3600',\n          });\n\n        if (uploadError) throw uploadError;\n\n        // Get the public URL of the uploaded file.\n        const { data: urlData } = supabase.storage.from('avatars').getPublicUrl(filePath);\n        // Add a timestamp to the URL to bypass cache\n        newAvatarUrl = `${urlData.publicUrl}?t=${new Date().getTime()}`;\n      }\n\n      // 2. Prepare the data for the user update.\n      // We only include fields that are being changed.\n      const userUpdateData = {\n        data: {\n          full_name: fullName,\n          // Only update avatar_url if a new one was uploaded\n          ...(newAvatarUrl && { avatar_url: newAvatarUrl }),\n        },\n      };\n\n      // 3. Update the user's auth metadata.\n      // This will now use the improved updateUser from AuthContext.\n      const { error: userError } = await updateUser({\n        ...userUpdateData,\n        id: user.id, // Ensure the user ID is passed\n      });\n\n      if (userError) throw userError;\n\n      // 4. State is now handled by the AuthContext, no need to refresh here.\n      toast.success('Profile updated successfully!');\n      setSaveState('Saved!');\n      \n      setTimeout(() => {\n        setSaveState('Save Changes');\n      }, 2000);\n\n    } catch (err) {\n      console.error(\"Profile update failed:\", err);\n      toast.error(err.message || 'An error occurred while updating your profile.');\n      setSaveState('Save Changes');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-form\" style={{ maxWidth: 420 }}>\n        <form onSubmit={handleSave}>\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: 24 }}>\n              <label htmlFor=\"avatar-upload\" style={{ cursor: 'pointer' }}>\n                <img\n                  src={avatarUrl}\n                  alt=\"Profile avatar\"\n                  style={{ width: 96, height: 96, borderRadius: '50%', objectFit: 'cover', marginBottom: 8, border: '2px solid var(--brand-primary)' }}\n                />\n                <input\n                  id=\"avatar-upload\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  style={{ display: 'none' }}\n                  ref={fileInputRef}\n                  onChange={handleAvatarChange}\n                  aria-label=\"Change profile picture\"\n                />\n                <div style={{ color: 'var(--brand-primary)', fontSize: 14, textAlign: 'center' }}>Change Avatar</div>\n              </label>\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor=\"full-name\">Full Name</label>\n              <input\n                id=\"full-name\"\n                className=\"input-field\"\n                type=\"text\"\n                value={fullName}\n                onInput={handleNameChange}\n                placeholder=\"Your name\"\n                maxLength={40}\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label>Email</label>\n              <input\n                className=\"input-field\"\n                type=\"email\"\n                value={user.email}\n                disabled\n                readOnly\n              />\n            </div>\n            <button className=\"button\" type=\"submit\" disabled={loading} style={{ marginTop: 16 }}>\n              {saveState}\n            </button>\n          </form>\n        </div>\n      </div>\n  );\n};\n\nexport default Profile;"],"names":["getAvatarUrl","profile","user","getProxiedImageUrl","Profile","updateUser","useAuth","fullName","setFullName","useState","avatarUrl","setAvatarUrl","avatarFile","setAvatarFile","loading","setLoading","saveState","setSaveState","fileInputRef","useRef","useEffect","jsx","jsxs","e","newAvatarUrl","fileExt","filePath","uploadError","supabase","urlData","userUpdateData","userError","toast","err","file","reader","ev"],"mappings":"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"}