import{a as E,b as S,t as k,c as C,A as b,u as t,d as R}from"./index-C2SMlRQe.js";import{d as p,q as T,y as A}from"./react-vendor-BYlzYzcd.js";import{H as v}from"./Helmet-BJndoUNm.js";import{M as F}from"./MovieCard-CzqTyfMY.js";const $=async(l,i=3,d=1e3)=>{for(let n=0;n<i;n++)try{const s=new Promise((y,h)=>{setTimeout(()=>h(new Error("Request timeout")),1e4)}),c=fetch(l,{headers:{Accept:"application/json","Content-Type":"application/json"}}),a=await Promise.race([c,s]);if(!a.ok)throw new Error(`HTTP ${a.status}: ${a.statusText}`);return a}catch(s){if(console.warn(`Fetch attempt ${n+1} failed for ${l}:`,s.message),n===i-1)throw s;await new Promise(c=>setTimeout(c,d*(n+1)))}},M=()=>{const{user:l}=E(),[i,d]=p([]),[n,s]=p(!0),[c,a]=p(null),{removeContinueWatchingItem:y,fetchContinueWatching:h}=S(),_=T(async()=>{if(!l){s(!1);return}s(!0),a(null);try{if(!await k())throw new Error("Supabase connection test failed. Please check your internet connection and try again.");const o=await C();if(!o||o.length===0){d([]),s(!1);return}console.log("ðŸ“š Combined history data received:",{totalItems:o.length,itemsWithProgress:o.filter(e=>e.progress_seconds>0).length});const W=(await Promise.allSettled(o.map(async e=>{try{const f=await(await $(`${b}/tmdb/${e.media_type}/${e.media_id}`)).json(),m={...f,id:f.id,watch_id:`${e.user_id}-${e.media_id}-${e.media_type}-${e.season_number||0}-${e.episode_number||0}`,type:e.media_type,media_type:e.media_type,media_id:e.media_id,season_number:e.season_number,episode_number:e.episode_number,watched_at:e.watched_at,progress_seconds:e.progress_seconds,duration_seconds:e.duration_seconds};if(e.media_type==="tv"&&e.season_number&&e.episode_number)try{const u=await(await $(`${b}/tmdb/tv/${e.media_id}/season/${e.season_number}/episode/${e.episode_number}`)).json();return{...m,episode_name:u.name,still_path:u.still_path,episode_overview:u.overview}}catch(g){console.error("Error fetching episode details:",g)}return m}catch(w){return console.error(`Error fetching details for ${e.media_type} ${e.media_id}:`,w),{id:e.media_id,watch_id:`${e.user_id}-${e.media_id}-${e.media_type}-${e.season_number||0}-${e.episode_number||0}`,type:e.media_type,media_type:e.media_type,media_id:e.media_id,season_number:e.season_number,episode_number:e.episode_number,watched_at:e.watched_at,title:e.media_type==="tv"?"Unknown TV Show":"Unknown Movie",name:e.media_type==="tv"?"Unknown TV Show":void 0,poster_path:null,overview:"Details could not be loaded",_failed_to_load:!0,progress_seconds:e.progress_seconds,duration_seconds:e.duration_seconds}}}))).filter(e=>e.status==="fulfilled"&&e.value).map(e=>e.value);d(W)}catch(r){console.error("Error fetching watch history:",r),a("Failed to load watch history. Please try again."),d([])}finally{s(!1)}},[l]);A(()=>{_()},[_]);const H=async r=>{d(i.filter(o=>o.watch_id!==r.watch_id)),y(r.media_id);try{await R(r),await h()}catch(o){console.error("Failed to delete item or refetch continue watching:",o)}},P=()=>{_()};return n?t("div",{class:"container",children:t("p",{children:"Loading watch history..."})}):c?t("div",{class:"container",children:[t(v,{children:t("title",{children:"Watch History - FreeStream"})}),t("h1",{children:"Watch History"}),t("div",{class:"error-message",children:[t("p",{children:c}),t("button",{onClick:P,class:"retry-button",children:"Retry"})]})]}):t("div",{class:"container",children:[t(v,{children:t("title",{children:"Watch History - FreeStream"})}),t("h1",{children:"Watch History"}),i.length>0?t("div",{class:"movie-grid",children:i.map(r=>t(F,{item:r,type:r.type,progress:r.progress_seconds,duration:r.duration_seconds,showDeleteButton:!0,onDelete:H},r.watch_id))}):t("p",{children:"Your watch history is empty."})]})};export{M as default};
//# sourceMappingURL=History-DKeI9yh5.js.map
