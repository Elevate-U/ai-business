{"version":3,"file":"Search-s-WWXqWx.js","sources":["../../src/pages/Search.jsx"],"sourcesContent":["import { h } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport MovieCard from '../components/MovieCard';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport './Home.css'; // Re-use some styling\nimport { API_BASE_URL } from '../config';\n\nconst SearchPage = (props) => {\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [searchFilter, setSearchFilter] = useState('all');\n  const [dataSources, setDataSources] = useState({\n    anilist: false,\n    tmdb: false\n  });\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.url?.split('?')[1] || '');\n    const q = urlParams.get('q');\n    const filter = urlParams.get('filter') || 'all';\n    \n    setQuery(q || '');\n    setSearchFilter(filter);\n\n    if (q) {\n      performSearch(q, filter);\n    } else {\n      setResults([]);\n    }\n  }, [props.url]);\n\n  const performSearch = async (searchQuery, filter = 'all') => {\n    setLoading(true);\n    try {\n      // First try our new unified search endpoint\n      const unifiedUrl = `${API_BASE_URL}/search/unified?query=${encodeURIComponent(searchQuery)}&type=${filter}`;\n      const unifiedRes = await fetch(unifiedUrl);\n      \n      if (unifiedRes.ok) {\n        const unifiedData = await unifiedRes.json();\n        \n        // Update data sources state with defensive checks\n        setDataSources({\n          anilist: unifiedData.anilist && Array.isArray(unifiedData.anilist) && unifiedData.anilist.length > 0,\n          tmdb: unifiedData.tmdb && (\n            (unifiedData.tmdb.movies && Array.isArray(unifiedData.tmdb.movies) && unifiedData.tmdb.movies.length > 0) || \n            (unifiedData.tmdb.tv && Array.isArray(unifiedData.tmdb.tv) && unifiedData.tmdb.tv.length > 0)\n          )\n        });\n        \n        // Use combined results with defensive check\n        if (unifiedData.combined && Array.isArray(unifiedData.combined)) {\n          setResults(unifiedData.combined);\n        } else {\n          console.warn('Combined data is missing or not an array');\n          setResults([]);\n        }\n        \n        setLoading(false);\n        return;\n      }\n      \n      // Fallback to traditional TMDB search if unified endpoint fails\n      console.log('Falling back to TMDB search API');\n      const res = await fetch(`${API_BASE_URL}/tmdb/search/multi?query=${encodeURIComponent(searchQuery)}`);\n      const data = await res.json();\n      \n      if (data && data.results) {\n        // Filter results based on selected filter\n        let filteredResults = data.results;\n        \n        if (filter !== 'all') {\n          filteredResults = filteredResults.filter(item => item.media_type === filter);\n        }\n        \n        const validResults = filteredResults.filter(item => \n          (item.media_type === 'movie' || item.media_type === 'tv') && \n          (item.poster_path || item.backdrop_path)\n        );\n        \n        const uniqueResults = validResults.filter((item, index, self) =>\n          index === self.findIndex((t) => t.id === item.id && t.media_type === item.media_type)\n        );\n        \n        setResults(uniqueResults);\n        \n        // Set data source to TMDB only\n        setDataSources({\n          anilist: false,\n          tmdb: true\n        });\n      }\n    } catch (error) {\n      console.error(\"Error performing search:\", error);\n      setResults([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFilterChange = (newFilter) => {\n    // Update URL with the new filter\n    const url = new URL(window.location.href);\n    url.searchParams.set('filter', newFilter);\n    window.history.replaceState({}, '', url);\n    \n    // Re-perform search with the new filter\n    setSearchFilter(newFilter);\n    performSearch(query, newFilter);\n  };\n\n  // Helper to render movie/TV/anime cards with source badges\n  const renderResultCard = (item, index) => (\n    <div key={`${item.media_type || 'item'}-${item.id}-${index}`} className=\"movie-card-container\">\n      <MovieCard \n        item={item} \n        type={item.media_type || (item.episodes ? 'anime' : 'movie')}\n        progress={null}\n        duration={null}\n      />\n      {item.source && (\n        <div className={`source-badge source-${item.source}`}>\n          {item.source === 'anilist' ? 'AL' : 'TMDB'}\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"container home-page\">\n      <div className=\"search-header\">\n        <h1 className=\"main-title\">Search Results</h1>\n        <div className=\"search-query-display\">\n          <span className=\"search-label\">Showing results for:</span>\n          <span className=\"search-query\">\"{query}\"</span>\n        </div>\n        \n        {/* Source indicators */}\n        <div className=\"search-sources\">\n          {dataSources.anilist && <span className=\"data-source anilist\">AniList</span>}\n          {dataSources.tmdb && <span className=\"data-source tmdb\">TMDB</span>}\n        </div>\n        \n        {/* Filter tabs */}\n        <div className=\"search-filters\">\n          <button \n            className={`filter-btn ${searchFilter === 'all' ? 'active' : ''}`}\n            onClick={() => handleFilterChange('all')}\n          >\n            All\n          </button>\n          <button \n            className={`filter-btn ${searchFilter === 'movie' ? 'active' : ''}`}\n            onClick={() => handleFilterChange('movie')}\n          >\n            Movies\n          </button>\n          <button \n            className={`filter-btn ${searchFilter === 'tv' ? 'active' : ''}`}\n            onClick={() => handleFilterChange('tv')}\n          >\n            TV Shows\n          </button>\n          <button \n            className={`filter-btn ${searchFilter === 'anime' ? 'active' : ''}`}\n            onClick={() => handleFilterChange('anime')}\n          >\n            Anime\n          </button>\n        </div>\n      </div>\n      \n      {loading ? (\n        <LoadingSpinner text=\"Searching across multiple sources...\" />\n      ) : (\n        results.length > 0 ? (\n          <section className=\"home-section\">\n            <h2>Found {results.length} result{results.length !== 1 ? 's' : ''}</h2>\n            <div className=\"movie-grid\">\n              {results.map(renderResultCard)}\n            </div>\n          </section>\n        ) : query ? (\n          <div className=\"no-results\">\n            <div className=\"no-results-icon\">üîç</div>\n            <h3>No results found</h3>\n            <p>We couldn't find anything for \"{query}\" in the {searchFilter === 'all' ? 'database' : searchFilter} category.</p>\n            <div className=\"search-suggestions\">\n              <p>Try:</p>\n              <ul>\n                <li>Using different keywords or spelling</li>\n                <li>Searching in a different category</li>\n                <li>Using the title in its original language</li>\n                <li>Searching for something more general</li>\n              </ul>\n            </div>\n          </div>\n        ) : (\n          <div className=\"search-welcome\">\n            <div className=\"search-welcome-icon\">üé¨</div>\n            <h3>Start your search</h3>\n            <p>Search across multiple sources including TMDB and AniList.</p>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default SearchPage; "],"names":["SearchPage","props","results","setResults","useState","loading","setLoading","query","setQuery","searchFilter","setSearchFilter","dataSources","setDataSources","useEffect","urlParams","q","filter","performSearch","searchQuery","unifiedUrl","API_BASE_URL","unifiedRes","unifiedData","data","filteredResults","item","uniqueResults","index","self","t","error","handleFilterChange","newFilter","url","renderResultCard","jsxs","jsx","MovieCard","LoadingSpinner"],"mappings":"yKAOA,MAAMA,EAAcC,GAAU,CAC5B,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAS,CAAA,CAAE,EACnC,CAACC,EAASC,CAAU,EAAIF,EAAS,EAAK,EACtC,CAACG,EAAOC,CAAQ,EAAIJ,EAAS,EAAE,EAC/B,CAACK,EAAcC,CAAe,EAAIN,EAAS,KAAK,EAChD,CAACO,EAAaC,CAAc,EAAIR,EAAS,CAC7C,QAAS,GACT,KAAM,EAAA,CACP,EAEDS,EAAU,IAAM,CACd,MAAMC,EAAY,IAAI,gBAAgBb,EAAM,KAAK,MAAM,GAAG,EAAE,CAAC,GAAK,EAAE,EAC9Dc,EAAID,EAAU,IAAI,GAAG,EACrBE,EAASF,EAAU,IAAI,QAAQ,GAAK,MAE1CN,EAASO,GAAK,EAAE,EAChBL,EAAgBM,CAAM,EAElBD,EACFE,EAAcF,EAAGC,CAAM,EAEvBb,EAAW,CAAA,CAAE,CAEjB,EAAG,CAACF,EAAM,GAAG,CAAC,EAEd,MAAMgB,EAAgB,MAAOC,EAAaF,EAAS,QAAU,CAC3DV,EAAW,EAAI,EACf,GAAI,CAEF,MAAMa,EAAa,GAAGC,CAAY,yBAAyB,mBAAmBF,CAAW,CAAC,SAASF,CAAM,GACnGK,EAAa,MAAM,MAAMF,CAAU,EAEzC,GAAIE,EAAW,GAAI,CACjB,MAAMC,EAAc,MAAMD,EAAW,KAAA,EAGrCT,EAAe,CACb,QAASU,EAAY,SAAW,MAAM,QAAQA,EAAY,OAAO,GAAKA,EAAY,QAAQ,OAAS,EACnG,KAAMA,EAAY,OACfA,EAAY,KAAK,QAAU,MAAM,QAAQA,EAAY,KAAK,MAAM,GAAKA,EAAY,KAAK,OAAO,OAAS,GACtGA,EAAY,KAAK,IAAM,MAAM,QAAQA,EAAY,KAAK,EAAE,GAAKA,EAAY,KAAK,GAAG,OAAS,EAAA,CAE9F,EAGGA,EAAY,UAAY,MAAM,QAAQA,EAAY,QAAQ,EAC5DnB,EAAWmB,EAAY,QAAQ,GAE/B,QAAQ,KAAK,0CAA0C,EACvDnB,EAAW,CAAA,CAAE,GAGfG,EAAW,EAAK,EAChB,MACF,CAGA,QAAQ,IAAI,iCAAiC,EAE7C,MAAMiB,EAAO,MADD,MAAM,MAAM,GAAGH,CAAY,4BAA4B,mBAAmBF,CAAW,CAAC,EAAE,GAC7E,KAAA,EAEvB,GAAIK,GAAQA,EAAK,QAAS,CAExB,IAAIC,EAAkBD,EAAK,QAEvBP,IAAW,QACbQ,EAAkBA,EAAgB,OAAOC,GAAQA,EAAK,aAAeT,CAAM,GAQ7E,MAAMU,EALeF,EAAgB,OAAOC,IACzCA,EAAK,aAAe,SAAWA,EAAK,aAAe,QACnDA,EAAK,aAAeA,EAAK,cAAA,EAGO,OAAO,CAACA,EAAME,EAAOC,IACtDD,IAAUC,EAAK,UAAWC,GAAMA,EAAE,KAAOJ,EAAK,IAAMI,EAAE,aAAeJ,EAAK,UAAU,CAAA,EAGtFtB,EAAWuB,CAAa,EAGxBd,EAAe,CACb,QAAS,GACT,KAAM,EAAA,CACP,CACH,CACF,OAASkB,EAAO,CACd,QAAQ,MAAM,2BAA4BA,CAAK,EAC/C3B,EAAW,CAAA,CAAE,CACf,QAAA,CACEG,EAAW,EAAK,CAClB,CACF,EAEMyB,EAAsBC,GAAc,CAExC,MAAMC,EAAM,IAAI,IAAI,OAAO,SAAS,IAAI,EACxCA,EAAI,aAAa,IAAI,SAAUD,CAAS,EACxC,OAAO,QAAQ,aAAa,CAAA,EAAI,GAAIC,CAAG,EAGvCvB,EAAgBsB,CAAS,EACzBf,EAAcV,EAAOyB,CAAS,CAChC,EAGME,EAAmB,CAACT,EAAME,IAC9BQ,EAAC,MAAA,CAA6D,UAAU,uBACtE,SAAA,CAAAC,EAACC,EAAA,CACC,KAAAZ,EACA,KAAMA,EAAK,aAAeA,EAAK,SAAW,QAAU,SACpD,SAAU,KACV,SAAU,IAAA,CAAA,EAEXA,EAAK,QACJW,EAAC,MAAA,CAAI,UAAW,uBAAuBX,EAAK,MAAM,GAC/C,SAAAA,EAAK,SAAW,UAAY,KAAO,MAAA,CACtC,CAAA,CAAA,EAVM,GAAGA,EAAK,YAAc,MAAM,IAAIA,EAAK,EAAE,IAAIE,CAAK,EAY1D,EAGF,OACEQ,EAAC,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAA,EAAC,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAC,KAAA,CAAG,UAAU,aAAa,SAAA,iBAAc,EACzCD,EAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAC,EAAC,OAAA,CAAK,UAAU,eAAe,SAAA,uBAAoB,EACnDD,EAAC,OAAA,CAAK,UAAU,eAAe,SAAA,CAAA,IAAE5B,EAAM,GAAA,CAAA,CAAC,CAAA,EAC1C,EAGA4B,EAAC,MAAA,CAAI,UAAU,iBACZ,SAAA,CAAAxB,EAAY,SAAWyB,EAAC,OAAA,CAAK,UAAU,sBAAsB,SAAA,UAAO,EACpEzB,EAAY,MAAQyB,EAAC,OAAA,CAAK,UAAU,mBAAmB,SAAA,MAAA,CAAI,CAAA,EAC9D,EAGAD,EAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAC,EAAC,SAAA,CACC,UAAW,cAAc3B,IAAiB,MAAQ,SAAW,EAAE,GAC/D,QAAS,IAAMsB,EAAmB,KAAK,EACxC,SAAA,KAAA,CAAA,EAGDK,EAAC,SAAA,CACC,UAAW,cAAc3B,IAAiB,QAAU,SAAW,EAAE,GACjE,QAAS,IAAMsB,EAAmB,OAAO,EAC1C,SAAA,QAAA,CAAA,EAGDK,EAAC,SAAA,CACC,UAAW,cAAc3B,IAAiB,KAAO,SAAW,EAAE,GAC9D,QAAS,IAAMsB,EAAmB,IAAI,EACvC,SAAA,UAAA,CAAA,EAGDK,EAAC,SAAA,CACC,UAAW,cAAc3B,IAAiB,QAAU,SAAW,EAAE,GACjE,QAAS,IAAMsB,EAAmB,OAAO,EAC1C,SAAA,OAAA,CAAA,CAED,CAAA,CACF,CAAA,EACF,EAEC1B,EACC+B,EAACE,EAAA,CAAe,KAAK,sCAAA,CAAuC,EAE5DpC,EAAQ,OAAS,EACfiC,EAAC,UAAA,CAAQ,UAAU,eACjB,SAAA,CAAAA,EAAC,KAAA,CAAG,SAAA,CAAA,SAAOjC,EAAQ,OAAO,UAAQA,EAAQ,SAAW,EAAI,IAAM,EAAA,EAAG,IACjE,MAAA,CAAI,UAAU,aACZ,SAAAA,EAAQ,IAAIgC,CAAgB,CAAA,CAC/B,CAAA,CAAA,CACF,EACE3B,EACF4B,EAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAC,MAAA,CAAI,UAAU,kBAAkB,SAAA,KAAE,EACnCA,EAAC,MAAG,SAAA,kBAAA,CAAgB,IACnB,IAAA,CAAE,SAAA,CAAA,kCAAgC7B,EAAM,YAAUE,IAAiB,MAAQ,WAAaA,EAAa,YAAA,EAAU,EAChH0B,EAAC,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,EAAC,KAAE,SAAA,MAAA,CAAI,IACN,KAAA,CACC,SAAA,CAAAA,EAAC,MAAG,SAAA,sCAAA,CAAoC,EACxCA,EAAC,MAAG,SAAA,mCAAA,CAAiC,EACrCA,EAAC,MAAG,SAAA,0CAAA,CAAwC,EAC5CA,EAAC,MAAG,SAAA,sCAAA,CAAoC,CAAA,CAAA,CAC1C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAEAD,EAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAC,EAAC,MAAA,CAAI,UAAU,sBAAsB,SAAA,KAAE,EACvCA,EAAC,MAAG,SAAA,mBAAA,CAAiB,EACrBA,EAAC,KAAE,SAAA,4DAAA,CAA0D,CAAA,CAAA,CAC/D,CAAA,EAGN,CAEJ"}