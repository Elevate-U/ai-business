import{a as fr,b as pr,s as vr,$ as H,A as I,e as yr,f as br,h as Je,i as Ke,u as e,j as Qe,I as Xe}from"./index-D_4x1Yiq.js";import{d as c,A as v,y as b,T as _r,q as wr,k as $r}from"./react-vendor-BYlzYzcd.js";import{H as Er}from"./Helmet-COLEUNIL.js";import{M as Sr}from"./MovieCard-CDjwaIjv.js";import{i as Tr,r as Pr,a as kr}from"./favorites-DDkx7p5Z.js";const Fr=Ze=>{const[d,se]=c(null),[_e,we]=c([]),[$e,Ee]=c([]),[E,Y]=c(""),[er,te]=c(!0),[Ir,Lr]=c(!1);v(null);const[m,q]=c(null),[f,z]=c(null),[L,Se]=c("videasy"),[Te,rr]=c(["videasy","vidsrc","embedsu"]),[V,Pe]=c(null),[sr,ke]=c(!1),[j,tr]=c(!1),[A,D]=c(null),[Ie,Le]=c(!1),[Re,B]=c(!1),T=v(),[Ce,Rr]=c(null),{id:u,type:s,season:R,episode:C}=Ze.matches,[P,G]=c(s==="anime"?null:u),[U,Ae]=c(s==="anime"?"anime":s),[nr,ne]=c(!1),[N,oe]=c(!1),[Ue,ae]=c([]),ie=v(null),[or,F]=c([]),[w,J]=c(null),[le,K]=c(!1),[M,Cr]=c(0),[ce,Q]=c(1),[de,xe]=c(1),[ue,Me]=c(!1),x=10,X=v(!1),me=v(null),ge=v(!1),he=v(!1),ar=v(!1),ir=v(null),lr=v(!1),Z=v(new Set),cr=v(0);v(0);const fe=v(null);v({});const ee=v(0),{user:De}=fr(),y=De?.id,re="tv",{setCurrentMediaItem:pe,favoritesFetched:Ne,fetchContinueWatching:dr}=pr();b(()=>{if(s==="tv"||s==="anime")if(R&&C&&!isNaN(parseInt(R))&&!isNaN(parseInt(C))){const n=parseInt(R,10),i=parseInt(C,10);q(n),z(i)}else q(1),z(1);else q(null),z(null)},[s,R,C]);const Fe=_r(()=>s!=="movie"||!w||!w.progress_seconds||w.progress_seconds<=0?0:w.duration_seconds>0?Math.min(100,w.progress_seconds/w.duration_seconds*100):w.progress_seconds>30?5:2,[s,w]),We=wr((r,n)=>{if(!r||!n)return 1;const i=Math.ceil(r/x);return Math.max(1,Math.min(i,Math.ceil(n/x)))},[x]),Oe=v(y);b(()=>{Oe.current=y},[y]);const ur=()=>{_e.find(n=>n.type==="Trailer"&&n.site==="YouTube")?ne(!0):alert("No trailer available for this movie.")};b(()=>()=>{Z.current.forEach(r=>clearTimeout(r)),Z.current.clear()},[m,f]),b(()=>{const r=()=>{document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||(console.log("📱 Exited fullscreen mode, syncing progress..."),setTimeout(()=>{vr(y).catch(i=>{console.error("Error syncing offline progress after fullscreen:",i)})},1e3))};return document.addEventListener("fullscreenchange",r),document.addEventListener("webkitfullscreenchange",r),document.addEventListener("mozfullscreenchange",r),()=>{document.removeEventListener("fullscreenchange",r),document.removeEventListener("webkitfullscreenchange",r),document.removeEventListener("mozfullscreenchange",r)}},[y]),b(()=>(d&&pe({...d,type:s}),()=>{pe(null)}),[d,s,pe]),b(()=>{if(!u||!s){H("/");return}s!=="anime"?(G(u),Ae(s)):(Ae("anime"),G(null))},[u,s]),b(()=>{if(s!=="anime"&&!P||s==="anime"&&!u)return;Y(""),oe(!1),ae([]),se(null),te(!0),F([]),ge.current=!1,he.current=!1,ar.current=!1,ir.current=null,lr.current=!1,Q(1),Me(!1),Z.current.forEach(n=>clearTimeout(n)),Z.current.clear(),cr.current=0,fe.current=null,(async()=>{te(!0);try{const n=new AbortController,i=setTimeout(()=>n.abort(),15e3),t=u,p=s==="anime"?`${I}/tmdb/anime/${t}/enhanced`:`${I}/tmdb/${U}/${P}`,l=s==="anime"?null:`${I}/tmdb/${U}/${P}/videos`,o=s==="anime"?`${I}/tmdb/anime/${t}/recommendations`:`${I}/tmdb/${U}/${P}/recommendations`,a=async($,k)=>{if(!$)return null;try{const _=await fetch($,{signal:n.signal});if(!_.ok)throw new Error(`HTTP ${_.status}: ${_.statusText}`);const O=await _.json();return s==="anime"&&O._conversion?.tmdbId&&G(O._conversion.tmdbId),s==="anime"&&O.tmdb_id&&G(O.tmdb_id),O}catch(_){if(console.error(`${k}:`,_),k.includes("videos")||k.includes("recommendations"))return{results:[]};throw _}};let S,h,g;s==="anime"?(S=await a(p,"Error fetching anime details"),h={results:S?.videos?.results||[]},g=await a(o,"Error fetching recommendations")):[S,h,g]=await Promise.all([a(p,"Error fetching media details"),a(l,"Error fetching videos"),a(o,"Error fetching recommendations")]),clearTimeout(i),se(S),we(h.results||[]),Ee(g.results||[])}catch{se(null),we([]),Ee([])}finally{te(!1)}})()},[P,U,R,C,y]),b(()=>{(async()=>{if(!y||!d||!u||!s){s==="movie"?J(null):(s==="tv"||s==="anime")&&F([]);return}try{if((s==="tv"||s==="anime")&&d.seasons&&d.seasons.length>0&&!(R&&C&&!isNaN(parseInt(R))&&!isNaN(parseInt(C)))&&!he.current&&m!==null&&f!==null){console.log("🎬 Checking for continue watching episode...");const i=await yr(y,u,re);i&&i.season_number&&i.episode_number?(console.log(`🔄 Continue watching: S${i.season_number}E${i.episode_number}`),setTimeout(()=>{q(i.season_number),z(i.episode_number);const t=`/watch/${s}/${u}/season/${i.season_number}/episode/${i.episode_number}`;H(t,!0)},100)):console.log("📭 No continue watching data found, starting from beginning"),he.current=!0}if(s==="tv"||s==="anime"){const n=await br(y,u,re);F(n)}else if(s==="movie"){const n=await Je(y,u,s);console.log("Movie progress data loaded:",n),J(n)}}catch(n){console.error("Error loading user-specific data:",n)}})()},[y,d,u,s,R,C,re]),b(()=>{m!==null&&!ue&&Q(1)},[m]),b(()=>{(async()=>{if(s!=="tv"&&s!=="anime"||!m||m===null)return;const n=s==="anime"?u:P;if(n){ke(!0);try{const i=s==="anime"?`${I}/tmdb/anime/${n}/season/${m}`:`${I}/tmdb/${U}/${n}/season/${m}`,t=await fetch(i);if(!t.ok)throw new Error(`Failed to fetch season details: ${t.statusText}`);const p=await t.json();if(Pe(p),!ue){const l=p.episodes.length,o=We(f,l);Q(o),Me(!0)}}catch(i){console.error("Error fetching season details:",i),Pe(null)}finally{ke(!1)}}})()},[u,s,re,m,f,ue,We]),b(()=>{const r=`${m}-${f}`,n=me.current&&me.current!==r;if(me.current=r,X.current&&!n){X.current=!1;return}n&&(X.current=!1),(async()=>{if(!P||!U)return;const t=s==="anime"?u:P;if(!t)return;D(null),B(!1),T.current&&clearTimeout(T.current),T.current=setTimeout(()=>B(!0),1e4);const p=s==="anime"&&d&&(!d.seasons||d.seasons.length===0);if((s==="tv"||s==="anime")&&!p&&(m===null||f===null)){console.log("Season/episode not set, aborting stream URL fetch."),clearTimeout(T.current);return}try{let l=`${I}/stream-url?type=${s}&id=${t}&source=${L}`;(s==="tv"||s==="anime"&&!p)&&(l+=`&season=${m}&episode=${f}`),s==="anime"&&j&&(l+="&dub=true"),L==="videasy"&&(M>0&&(l+=`&progress=${Math.round(M)}`),(s==="tv"||s==="anime")&&(l+="&nextEpisode=true&episodeSelector=true&autoplayNextEpisode=true")),console.log(`Fetching stream URL: ${l}`);const o=await fetch(l);if(!o.ok)throw new Error(`Server responded with ${o.status}`);const a=await o.json();if(clearTimeout(T.current),a.url)console.log(`Stream URL generated: ${a.url}`),Y(a.url),oe(a.isDirectSource||!1),ae(a.qualities||[]),a.availableSources&&a.availableSources.length>0&&rr(a.availableSources),a.currentSource&&(X.current=!0,Se(a.currentSource)),D(null),K(!0);else throw new Error(a.message||"No stream URL returned from API")}catch(l){clearTimeout(T.current),console.error("Error fetching stream URL:",l.message),D(`Failed to load video: ${l.message}. Try changing the source or refreshing.`),K(!1)}})()},[P,U,m,f,L,j,d,M,y]),b(()=>{const r=Oe.current;if(r&&console.log("🔐 Progress tracking setup:",{hasUser:!0,userId:r,hasMediaDetails:!!d}),!r||!d){r&&!d&&console.log("⚠️ Progress tracking disabled - media details not yet available");return}const n=async(t,p)=>{console.log(`📊 Progress update received via ${p}: `,t);const l=t.season||m,o=t.episode||f;if(t&&t.progress>=0&&t.duration>0){const a=Date.now();if(a-ee.current<3e3)return;ee.current=a;try{console.log(`🎬 Attempting to save progress for ${s} ${u}:`,{progress:t.progress,duration:t.duration,season:l,episode:o}),await Ke(r,{...d,id:d.id,type:s,season:l,episode:o},t.progress,t.duration).catch(h=>{if(console.error("❌ Progress save error caught:",h),h.message?.includes("timeout")||h.message?.includes("auth")){const g=`offline_progress_${s}_${u}_${l||0}_${o||0}`,$={media_id:u,media_type:s,season_number:l,episode_number:o,progress_seconds:t.progress,duration_seconds:t.duration,timestamp:new Date().toISOString()};return localStorage.setItem(g,JSON.stringify($)),console.log("📱 Saved to localStorage after error"),!0}return!1})?(console.log("✅ Progress saved successfully"),dr(),l===m&&o===f&&(s==="movie"?J({progress_seconds:t.progress,duration_seconds:t.duration}):(s==="tv"||s==="anime")&&F(h=>{const g=[...h],$=g.findIndex(_=>_.season_number===l&&_.episode_number===o),k={media_id:parseInt(u,10),media_type:s,season_number:l,episode_number:o,progress_seconds:t.progress,duration_seconds:t.duration};return $>-1?g[$]={...g[$],...k}:g.push(k),g}))):console.error("❌ Failed to save progress, will retry on next update")}catch(S){console.error("❌ An unexpected error occurred while saving progress:",S);try{const h=`offline_progress_${s}_${u}_${l||0}_${o||0}`,g={media_id:u,media_type:s,season_number:l,episode_number:o,progress_seconds:t.progress,duration_seconds:t.duration,timestamp:new Date().toISOString()};localStorage.setItem(h,JSON.stringify(g)),console.log("📱 Saved to localStorage after exception")}catch(h){console.error("💔 All save mechanisms failed:",h)}}}else console.log("⚠️ Progress update ignored (insufficient data):",{hasProgressData:!!t,progress:t?.progress,duration:t?.duration,meetsThreshold:t?.progress>=0&&t?.duration>0})};let i;if(N){const t=ie.current;if(!t)return;const p=async()=>{const o=await Je(y,u,s,m,f);o&&o.progress_seconds&&(t.currentTime=o.progress_seconds)},l=async()=>{if(t.currentTime>0){const o=Date.now();if(o-ee.current<1e3)return;ee.current=o;const a={progress:Math.round(t.currentTime),duration:Math.round(t.duration),percentage:t.duration>0?t.currentTime/t.duration*100:0};console.log("🎬 Direct video - saving progress:",a),await Ke(y,{...d,id:d.id,type:s,season:m,episode:f},a.progress,a.duration)?(console.log("✅ Direct video progress saved successfully"),s==="movie"?J({progress_seconds:a.progress,duration_seconds:a.duration}):(s==="tv"||s==="anime")&&F(h=>{const g=[...h],$=g.findIndex(_=>_.season_number===m&&_.episode_number===f),k={media_id:parseInt(u,10),media_type:s,season_number:m,episode_number:f,progress_seconds:a.progress,duration_seconds:a.duration};return $>-1?g[$]={...g[$],...k}:g.push(k),g})):console.error("❌ Failed to save direct video progress")}};return t.addEventListener("loadedmetadata",p),t.addEventListener("timeupdate",l),()=>{t.removeEventListener("loadedmetadata",p),t.removeEventListener("timeupdate",l)}}else return i=t=>{const p=["player.videasy.net","vidsrc.to","embed.su","vidsrc.xyz","vidsrc.in","vidsrc.pm"],l=new URL(t.origin);if(p.includes(l.hostname))try{const o=typeof t.data=="string"?JSON.parse(t.data):t.data;if(o&&o.type==="PROGRESS_UPDATE"&&o.data){const a={progress:o.data.progress?.watched,duration:o.data.progress?.duration,season:o.data.season||m,episode:o.data.episode||f};n(a,"PROGRESS_UPDATE");return}if(o.type==="MEDIA_DATA"&&o.data){let a=o.data;if(typeof a=="string")try{a=JSON.parse(a)}catch(g){console.error("Error parsing double-encoded MEDIA_DATA string:",g);return}const S=`${s}-${u}`,h=a[S];if(h&&h.progress){const g={progress:h.progress.watched,duration:h.progress.duration,season:h.last_season_watched,episode:h.last_episode_watched};n(g,"MEDIA_DATA")}return}if(o.type==="PLAYER_EVENT"&&o.data)if(o.data.event==="timeupdate"){const a={progress:o.data.time,duration:o.data.duration};a.progress&&a.duration&&n(a,"PLAYER_EVENT")}else o.data.event==="ended"&&(s==="tv"||s==="anime")?console.log('Player reported "ended" event - Videasy will handle next episode automatically.'):o.data.event==="player_ready"&&(console.log("Player is ready."),K(!0))}catch(o){console.error("Error processing message from player:",{origin:t.origin,data:t.data,error:o.message})}},window.addEventListener("message",i),()=>{window.removeEventListener("message",i)}},[d,N,ie,m,f,y]),b(()=>{if(E&&!N&&!le){const r=setTimeout(()=>{le||(console.warn("Player ready timeout, starting fallback progress tracking."),mr())},1e4);return()=>clearTimeout(r)}},[E,N,le]);const mr=()=>{const r=setInterval(()=>{document.hasFocus()&&console.log("Fallback: Checking for progress...")},15e3);return()=>clearInterval(r)};if(b(()=>(B(!1),!E&&!A&&(T.current=setTimeout(()=>{B(!0),console.log("Stream timeout error")},25e3)),()=>{T.current&&clearTimeout(T.current)}),[E,A,m,f,L]),Ce)return e("div",{class:"container",style:{textAlign:"center",marginTop:"50px"},children:e("div",{class:"error-state",children:[e("h2",{children:"An Error Occurred"}),e("p",{children:Ce}),e("button",{onClick:()=>H("/"),class:"btn btn-primary",children:"Go Home"})]})});if(er)return e("div",{class:"loading-state",children:[e("div",{class:"loading-spinner"}),e("p",{children:"Loading media details..."}),e("p",{children:"If your video doesnt load refresh the page or pick a new server."})]});if(!d)return e("div",{class:"container",children:e("div",{class:"error-state",children:[e("h2",{children:"Unable to Load Media"}),e("p",{children:"We couldn't load the details for this content. This could be due to:"}),e("ul",{children:[e("li",{children:"Network connectivity issues"}),e("li",{children:"The content may no longer be available"}),e("li",{children:"Server maintenance"})]}),e("button",{onClick:()=>window.location.reload(),class:"btn btn-primary",style:{marginTop:"20px"},children:"Try Again"})]})});const{title:ve,name:ye,overview:gr,vote_average:Ar,release_date:He,first_air_date:W,last_air_date:Ye,runtime:qe,number_of_seasons:ze,genres:Ve,poster_path:je,status:Be}=d,Ge=s==="anime"?u:d.id,be=Tr(Ge,s);(He||W)&&new Date(He||W).getFullYear();const hr=()=>{const r={...d,id:Ge,type:s};be?Pr(r):kr(r)};return e("div",{children:[e(Er,{children:e("title",{children:[ve||ye," - Fovi"]})}),nr&&e("div",{className:"trailer-modal",onClick:()=>ne(!1),children:e("div",{className:"trailer-content",onClick:r=>r.stopPropagation(),children:[e("span",{className:"close-trailer",onClick:()=>ne(!1),children:"×"}),e("iframe",{src:`https://www.youtube.com/embed/${_e.find(r=>r.type==="Trailer")?.key}?autoplay=1`,frameBorder:"0",allow:"autoplay; encrypted-media",allowFullScreen:!0,title:"Trailer"})]})}),e("div",{class:"player-container",children:[!E&&A&&e("div",{class:"stream-error-message",children:[e("p",{children:A.message}),A.canRetry&&e("div",{class:"error-actions",children:[e("button",{onClick:async()=>{Le(!0),setTimeout(()=>{(async()=>{const n=`${I}/stream-url?type=${s}&id=${u}&source=${L}${s==="tv"||s==="anime"?`&season=${m}&episode=${f}`:""}${s==="anime"?`&dub=${j}`:""}`;try{const i=await fetch(n),t=await i.json();if(i.ok)Y(t.url),oe(t.isDirectSource),ae(t.qualities||[]),D(null);else throw new Error(t.message)}catch(i){console.error("Retry failed:",i),D({message:"Retry failed. Please try selecting a different source.",canRetry:!0})}Le(!1)})()},1e3)},disabled:Ie,class:"btn retry-btn",children:Ie?"Retrying...":"Retry"}),e("p",{children:"Or try selecting a different source from the list below."})]})]}),!E&&!A&&!Re&&e("div",{class:"stream-loading",children:[e("p",{children:"Loading video stream... "}),e("p",{children:"If your video doesnt load refresh the page or pick a new server."})]}),!E&&!A&&Re&&e("div",{class:"stream-error-message",children:[e("p",{children:"Sorry, this episode failed to load. Please refresh the page."}),e("div",{class:"error-actions",children:[e("button",{onClick:()=>window.location.reload(),class:"btn retry-btn",children:"Refresh"}),e("p",{children:"Or try selecting a different source from the list below if refreshing doesn't work."})]})]}),N?e("video",{ref:ie,src:E,controls:!0,autoPlay:!0,width:"100%"}):E&&e("iframe",{src:E,width:"100%",height:"100%",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"},frameBorder:"0",allowFullScreen:!0,allow:"autoplay; picture-in-picture",sandbox:"allow-forms allow-pointer-lock allow-same-origin allow-scripts allow-top-navigation",title:"Video Player",loading:"eager",referrerPolicy:"no-referrer-when-downgrade",importance:"high",onLoad:()=>{console.log("🎬 Player iframe loaded"),K(!0),L!=="videasy"&&M>30?setTimeout(()=>{const r=document.querySelector("iframe");if(r&&r.contentWindow)try{r.contentWindow.postMessage({type:"SEEK_TO",time:M},"*"),console.log(`📍 Sent seek command to restore progress: ${M}s`)}catch(n){console.log("Could not send seek command:",n)}},500):console.log(L==="videasy"?"📍 Videasy native resume - no seeking needed":"📍 No significant progress to resume, starting from beginning")}})]}),e("div",{class:"container",children:[e("div",{class:"media-details-layout",children:[e("div",{class:"poster",children:[e("img",{src:Qe(je?`${Xe}${je}`:"https://via.placeholder.com/500x750.png?text=No+Image"),alt:ve||ye}),Fe>0&&e("div",{class:"movie-progress-container",children:[e("div",{class:"movie-progress-bar",children:e("div",{class:"movie-progress",style:{width:`${Math.max(2,Fe)}%`}})}),e("div",{class:"movie-progress-text",children:w.duration_seconds>0?`${Math.floor(w.progress_seconds/60)}m / ${Math.floor(w.duration_seconds/60)}m watched`:`${Math.floor(w.progress_seconds/60)}m watched`})]})]}),e("div",{class:"details",children:[e("div",{class:"title-container",children:[e("h1",{children:ve||ye}),e("button",{onClick:hr,class:`favorite-btn ${be?"favorited":""}`,disabled:!Ne,children:Ne?be?"♥ Favorited":"♡ Favorite":"..."}),e("button",{onClick:ur,class:"favorite-btn trailer-btn",children:[e("i",{class:"fas fa-film"})," Trailer"]}),!De&&e("span",{class:"login-hint",children:e("small",{children:[e("a",{href:"/login",style:{color:"#007bff",textDecoration:"none"},children:"Log in"})," to save favorites, track progress & continue watching"]})})]}),e("div",{class:"meta",children:[e("span",{class:"rating",children:["★ ",d.vote_average?d.vote_average.toFixed(1):"N/A"]}),(s==="tv"||s==="anime")&&W&&e("span",{style:{marginLeft:8},children:(()=>{const r=W?new Date(W).getFullYear():null;let n=null;return Ye?n=new Date(Ye).getFullYear():Be&&Be.toLowerCase()==="ended"&&(n=r),r&&n&&r===n?`${r}`:r&&n&&n!==r?`${r} - ${n}`:r?`${r} -`:""})()}),qe&&e("span",{children:[qe," min"]}),ze&&e("span",{children:[ze," Seasons"]})]}),e("div",{class:"genres",children:Ve&&Ve.map(r=>e("span",{class:"genre-tag",children:r.name}))}),e("p",{class:"overview",children:gr}),Ue.length>0&&e("div",{class:"quality-selector",children:[e("label",{children:"Quality:"}),Ue.map(r=>e("button",{class:`quality-btn ${E===r.url?"active":""}`,onClick:()=>Y(r.url),children:[r.quality,"p"]}))]})]})]}),s==="anime"&&e("div",{class:"select-container",children:[e("label",{for:"dub-select",children:"Audio:"}),e("select",{id:"dub-select",value:j,onChange:r=>tr(r.target.value==="true"),children:[e("option",{value:"false",children:"Subbed"}),e("option",{value:"true",children:"Dubbed"})]})]}),e("div",{class:"selectors-container",children:[(s==="tv"||s==="anime")&&d&&d.seasons&&e("div",{class:"select-container",children:[e("label",{children:"Season:"}),e("div",{class:"selector-buttons",children:d.seasons.filter(r=>r.season_number>0).map(r=>e("button",{class:`selector-btn ${m===r.season_number?"active":""}`,onClick:()=>{console.log(`🎯 User manually selected season ${r.season_number}`),ge.current=!0,fe.current=null;const n=`/watch/${s}/${u}/season/${r.season_number}/episode/1`;H(n,!0)},children:r.name},r.id))})]}),Te.length>1&&e("div",{class:"select-container",children:[e("label",{children:"Source:"}),e("div",{class:"selector-buttons",children:Te.map(r=>e("button",{class:`selector-btn ${L===r?"active":""}`,onClick:()=>Se(r),children:r},r))})]})]}),(s==="tv"||s==="anime")&&m!==null&&f!==null&&e("div",{class:"episodes-container",children:[e("h3",{children:"Episodes"}),sr?e("div",{class:"loading-spinner"}):e($r,{children:[e("div",{class:"episode-list",children:V?.episodes?.slice((ce-1)*x,ce*x)?.map(r=>{const n=or.find(t=>t.season_number===m&&t.episode_number===r.episode_number),i=n&&n.progress_seconds>0?n.duration_seconds&&n.duration_seconds>0?Math.min(100,n.progress_seconds/n.duration_seconds*100):n.progress_seconds>30?5:2:0;return e("div",{class:`episode-card ${r.episode_number===f?"active":""}`,onClick:()=>{console.log(`🎯 User manually selected episode ${r.episode_number}`),ge.current=!0,fe.current=null;const t=`/watch/${s}/${u}/season/${m}/episode/${r.episode_number}`;H(t,!0)},children:[e("div",{class:"episode-card-image",children:[e("img",{src:Qe(r.still_path?`${Xe}${r.still_path}`:`https://via.placeholder.com/300x169.png?text=${encodeURIComponent(r.name)}`),alt:r.name}),e("div",{class:"episode-number-badge",children:r.episode_number}),i>0&&e("div",{class:"episode-progress-bar",children:e("div",{class:"episode-progress",style:{width:`${Math.max(2,i)}%`}})})]}),e("div",{class:"episode-card-content",children:[e("h4",{children:[r.name,r.air_date&&e("span",{style:{color:"#aaa",fontWeight:400,fontSize:"0.95em",marginLeft:8},children:["• ",(()=>{const t=new Date(r.air_date);return isNaN(t)?null:t.toLocaleDateString(void 0,{month:"short",day:"numeric",year:"numeric"})})()]})]}),e("p",{class:"episode-overview",children:r.overview})]})]},r.id)})}),V?.episodes&&V.episodes.length>x&&(()=>{const r=Math.ceil(V.episodes.length/x),n=10,i=Math.ceil(r/n),t=(de-1)*n+1,p=Math.min(t+n-1,r),l=Array.from({length:p-t+1},(o,a)=>t+a);return e("div",{class:"pagination-controls",children:[de>1&&e("button",{onClick:()=>xe(o=>o-1),children:e("i",{class:"fas fa-angle-double-left"})}),l.map(o=>e("button",{class:ce===o?"active":"",onClick:()=>Q(o),children:o},o)),de<i&&e("button",{onClick:()=>xe(o=>o+1),children:e("i",{class:"fas fa-angle-double-right"})})]})})()]})]}),$e.length>0&&e("div",{class:"recommendations",children:[e("h2",{children:"More Like This"}),e("div",{class:"movie-grid",children:$e.map(r=>e(Sr,{item:r,type:s,progress:null,duration:null},`${r.media_type||s}-${r.id}`))})]})]})]})};export{Fr as default};
//# sourceMappingURL=Watch-D7WEwV6f.js.map
