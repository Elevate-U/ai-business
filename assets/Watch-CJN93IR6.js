import{a as hs,b as fs,s as ps,$ as W,A as S,e as vs,f as ys,h as Je,i as Ke,u as e,j as Qe,I as Xe}from"./index-_qC34Ia1.js";import{d as c,A as p,y as b,T as bs,q as _s,k as ws}from"./react-vendor-BYlzYzcd.js";import{H as $s}from"./Helmet-mKIqbO7u.js";import{M as Es}from"./MovieCard-Co4wMSA7.js";import{i as Ss,r as Ts,a as Ps}from"./favorites-BlRffn-V.js";const Ns=Ze=>{const[d,ee]=c(null),[_e,we]=c([]),[$e,Ee]=c([]),[$,H]=c(""),[es,se]=c(!0),[ks,Is]=c(!1);p(null);const[m,Y]=c(null),[h,q]=c(null),[I,Se]=c("videasy"),[Te,ss]=c(["videasy","vidsrc","embedsu"]),[z,Pe]=c(null),[rs,ke]=c(!1),[V,ts]=c(!1),[A,D]=c(null),[Ie,Le]=c(!1),[Re,j]=c(!1),T=p(),[Ae,Ls]=c(null),{id:u,type:r,season:L,episode:R}=Ze.matches,[P,re]=c(r==="anime"?null:u),[C,Ce]=c(r==="anime"?"anime":r),[ns,te]=c(!1),[N,ne]=c(!1),[Ue,oe]=c([]),ae=p(null),[os,F]=c([]),[w,B]=c(null),[ie,G]=c(!1),[M,Rs]=c(0),[le,J]=c(1),[ce,xe]=c(1),[de,Me]=c(!1),U=10,K=p(!1),ue=p(null),me=p(!1),ge=p(!1),as=p(!1),is=p(null),ls=p(!1),Q=p(new Set),cs=p(0);p(0);const he=p(null);p({});const X=p(0),{user:De}=hs(),y=De?.id,Z="tv",{setCurrentMediaItem:fe,favoritesFetched:Ne}=fs();b(()=>{if(r==="tv"||r==="anime")if(L&&R&&!isNaN(parseInt(L))&&!isNaN(parseInt(R))){const n=parseInt(L,10),i=parseInt(R,10);Y(n),q(i)}else Y(1),q(1);else Y(null),q(null)},[r,L,R]);const Fe=bs(()=>r!=="movie"||!w||!w.progress_seconds||w.progress_seconds<=0?0:w.duration_seconds>0?Math.min(100,w.progress_seconds/w.duration_seconds*100):w.progress_seconds>30?5:2,[r,w]),Oe=_s((s,n)=>{if(!s||!n)return 1;const i=Math.ceil(s/U);return Math.max(1,Math.min(i,Math.ceil(n/U)))},[U]),We=p(y);b(()=>{We.current=y},[y]);const ds=()=>{_e.find(n=>n.type==="Trailer"&&n.site==="YouTube")?te(!0):alert("No trailer available for this movie.")};b(()=>()=>{Q.current.forEach(s=>clearTimeout(s)),Q.current.clear()},[m,h]),b(()=>{const s=()=>{document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||(console.log("📱 Exited fullscreen mode, syncing progress..."),setTimeout(()=>{ps(y).catch(i=>{console.error("Error syncing offline progress after fullscreen:",i)})},1e3))};return document.addEventListener("fullscreenchange",s),document.addEventListener("webkitfullscreenchange",s),document.addEventListener("mozfullscreenchange",s),()=>{document.removeEventListener("fullscreenchange",s),document.removeEventListener("webkitfullscreenchange",s),document.removeEventListener("mozfullscreenchange",s)}},[y]),b(()=>(d&&fe({...d,type:r}),()=>{fe(null)}),[d,r,fe]),b(()=>{if(!u||!r){W("/");return}r!=="anime"?(re(u),Ce(r)):(Ce("anime"),re(null))},[u,r]),b(()=>{if(r!=="anime"&&!P||r==="anime"&&!u)return;H(""),ne(!1),oe([]),ee(null),se(!0),F([]),me.current=!1,ge.current=!1,as.current=!1,is.current=null,ls.current=!1,J(1),Me(!1),Q.current.forEach(n=>clearTimeout(n)),Q.current.clear(),cs.current=0,he.current=null,(async()=>{se(!0);try{const n=new AbortController,i=setTimeout(()=>n.abort(),15e3),t=u,v=r==="anime"?`${S}/tmdb/anime/${t}`:`${S}/tmdb/${C}/${P}`,l=r==="anime"?`${S}/tmdb/anime/${t}/videos`:`${S}/tmdb/${C}/${P}/videos`,o=r==="anime"?`${S}/tmdb/anime/${t}/recommendations`:`${S}/tmdb/${C}/${P}/recommendations`,a=async(E,k)=>{try{const _=await fetch(E,{signal:n.signal});if(!_.ok)throw new Error(`HTTP ${_.status}: ${_.statusText}`);const be=await _.json();return r==="anime"&&be._conversion?.tmdbId&&re(be._conversion.tmdbId),be}catch(_){if(console.error(`${k}:`,_),k.includes("videos")||k.includes("recommendations"))return{results:[]};throw _}},[x,f,g]=await Promise.all([a(v,"Error fetching media details"),a(l,"Error fetching videos"),a(o,"Error fetching recommendations")]);clearTimeout(i),ee(x),we(f.results||[]),Ee(g.results||[])}catch{ee(null),we([]),Ee([])}finally{se(!1)}})()},[P,C,L,R,y]),b(()=>{(async()=>{if(!y||!d||!u||!r){r==="movie"?B(null):(r==="tv"||r==="anime")&&F([]);return}try{if((r==="tv"||r==="anime")&&d.seasons&&d.seasons.length>0&&!(L&&R&&!isNaN(parseInt(L))&&!isNaN(parseInt(R)))&&!ge.current&&m!==null&&h!==null){console.log("🎬 Checking for continue watching episode...");const i=await vs(y,u,Z);i&&i.season_number&&i.episode_number?(console.log(`🔄 Continue watching: S${i.season_number}E${i.episode_number}`),setTimeout(()=>{Y(i.season_number),q(i.episode_number);const t=`/watch/${r}/${u}/season/${i.season_number}/episode/${i.episode_number}`;W(t,!0)},100)):console.log("📭 No continue watching data found, starting from beginning"),ge.current=!0}if(r==="tv"||r==="anime"){const n=await ys(y,u,Z);F(n)}else if(r==="movie"){const n=await Je(y,u,r);console.log("Movie progress data loaded:",n),B(n)}}catch(n){console.error("Error loading user-specific data:",n)}})()},[y,d,u,r,L,R,Z]),b(()=>{m!==null&&!de&&J(1)},[m]),b(()=>{(async()=>{if(r!=="tv"&&r!=="anime"||!m||m===null)return;const n=r==="anime"?u:P;if(n){ke(!0);try{const i=r==="anime"?`${S}/tmdb/anime/${n}/season/${m}`:`${S}/tmdb/${C}/${n}/season/${m}`,t=await fetch(i);if(!t.ok)throw new Error(`Failed to fetch season details: ${t.statusText}`);const v=await t.json();if(Pe(v),!de){const l=v.episodes.length,o=Oe(h,l);J(o),Me(!0)}}catch(i){console.error("Error fetching season details:",i),Pe(null)}finally{ke(!1)}}})()},[u,r,Z,m,h,de,Oe]),b(()=>{const s=`${m}-${h}`,n=ue.current&&ue.current!==s;if(ue.current=s,K.current&&!n){K.current=!1;return}n&&(K.current=!1),(async()=>{if(!P||!C)return;const t=r==="anime"?u:P;if(!t)return;D(null),j(!1),T.current&&clearTimeout(T.current),T.current=setTimeout(()=>j(!0),1e4);const v=r==="anime"&&d&&(!d.seasons||d.seasons.length===0);if((r==="tv"||r==="anime")&&!v&&(m===null||h===null)){console.log("Season/episode not set, aborting stream URL fetch."),clearTimeout(T.current);return}try{let l=`${S}/stream-url?type=${r}&id=${t}&source=${I}`;(r==="tv"||r==="anime"&&!v)&&(l+=`&season=${m}&episode=${h}`),r==="anime"&&V&&(l+="&dub=true"),I==="videasy"&&(M>0&&(l+=`&progress=${Math.round(M)}`),(r==="tv"||r==="anime")&&(l+="&nextEpisode=true&episodeSelector=true&autoplayNextEpisode=true")),console.log(`Fetching stream URL: ${l}`);const o=await fetch(l);if(!o.ok)throw new Error(`Server responded with ${o.status}`);const a=await o.json();if(clearTimeout(T.current),a.url)console.log(`Stream URL generated: ${a.url}`),H(a.url),ne(a.isDirectSource||!1),oe(a.qualities||[]),a.availableSources&&a.availableSources.length>0&&ss(a.availableSources),a.currentSource&&(K.current=!0,Se(a.currentSource)),D(null),G(!0);else throw new Error(a.message||"No stream URL returned from API")}catch(l){clearTimeout(T.current),console.error("Error fetching stream URL:",l.message),D(`Failed to load video: ${l.message}. Try changing the source or refreshing.`),G(!1)}})()},[P,C,m,h,I,V,d,M,y]),b(()=>{const s=We.current;if(s&&console.log("🔐 Progress tracking setup:",{hasUser:!0,userId:s,hasMediaDetails:!!d}),!s||!d){s&&!d&&console.log("⚠️ Progress tracking disabled - media details not yet available");return}const n=async(t,v)=>{console.log(`📊 Progress update received via ${v}: `,t);const l=t.season||m,o=t.episode||h;if(t&&t.progress>=0&&t.duration>0){const a=Date.now();if(a-X.current<1e3)return;X.current=a;try{console.log(`🎬 Attempting to save progress for ${r} ${u}:`,{progress:t.progress,duration:t.duration,season:l,episode:o}),await Ke(s,{...d,id:d.id,type:r,season:l,episode:o},t.progress,t.duration).catch(f=>{if(console.error("❌ Progress save error caught:",f),f.message?.includes("timeout")||f.message?.includes("auth")){const g=`offline_progress_${r}_${u}_${l||0}_${o||0}`,E={media_id:u,media_type:r,season_number:l,episode_number:o,progress_seconds:t.progress,duration_seconds:t.duration,timestamp:new Date().toISOString()};return localStorage.setItem(g,JSON.stringify(E)),console.log("📱 Saved to localStorage after error"),!0}return!1})?(console.log("✅ Progress saved successfully"),l===m&&o===h&&(r==="movie"?B({progress_seconds:t.progress,duration_seconds:t.duration}):(r==="tv"||r==="anime")&&F(f=>{const g=[...f],E=g.findIndex(_=>_.season_number===l&&_.episode_number===o),k={media_id:parseInt(u,10),media_type:r,season_number:l,episode_number:o,progress_seconds:t.progress,duration_seconds:t.duration};return E>-1?g[E]={...g[E],...k}:g.push(k),g}))):console.error("❌ Failed to save progress, will retry on next update")}catch(x){console.error("❌ An unexpected error occurred while saving progress:",x);try{const f=`offline_progress_${r}_${u}_${l||0}_${o||0}`,g={media_id:u,media_type:r,season_number:l,episode_number:o,progress_seconds:t.progress,duration_seconds:t.duration,timestamp:new Date().toISOString()};localStorage.setItem(f,JSON.stringify(g)),console.log("📱 Saved to localStorage after exception")}catch(f){console.error("💔 All save mechanisms failed:",f)}}}else console.log("⚠️ Progress update ignored (insufficient data):",{hasProgressData:!!t,progress:t?.progress,duration:t?.duration,meetsThreshold:t?.progress>=0&&t?.duration>0})};let i;if(N){const t=ae.current;if(!t)return;const v=async()=>{const o=await Je(y,u,r,m,h);o&&o.progress_seconds&&(t.currentTime=o.progress_seconds)},l=async()=>{if(t.currentTime>0){const o=Date.now();if(o-X.current<1e3)return;X.current=o;const a={progress:Math.round(t.currentTime),duration:Math.round(t.duration),percentage:t.duration>0?t.currentTime/t.duration*100:0};console.log("🎬 Direct video - saving progress:",a),await Ke(y,{...d,id:d.id,type:r,season:m,episode:h},a.progress,a.duration)?(console.log("✅ Direct video progress saved successfully"),r==="movie"?B({progress_seconds:a.progress,duration_seconds:a.duration}):(r==="tv"||r==="anime")&&F(f=>{const g=[...f],E=g.findIndex(_=>_.season_number===m&&_.episode_number===h),k={media_id:parseInt(u,10),media_type:r,season_number:m,episode_number:h,progress_seconds:a.progress,duration_seconds:a.duration};return E>-1?g[E]={...g[E],...k}:g.push(k),g})):console.error("❌ Failed to save direct video progress")}};return t.addEventListener("loadedmetadata",v),t.addEventListener("timeupdate",l),()=>{t.removeEventListener("loadedmetadata",v),t.removeEventListener("timeupdate",l)}}else return i=t=>{const v=["player.videasy.net","vidsrc.to","embed.su","vidsrc.xyz","vidsrc.in","vidsrc.pm"],l=new URL(t.origin);if(v.includes(l.hostname))try{const o=typeof t.data=="string"?JSON.parse(t.data):t.data;if(o&&o.type==="PROGRESS_UPDATE"&&o.data){const a={progress:o.data.progress?.watched,duration:o.data.progress?.duration,season:o.data.season||m,episode:o.data.episode||h};n(a,"PROGRESS_UPDATE");return}if(o.type==="MEDIA_DATA"&&o.data){let a=o.data;if(typeof a=="string")try{a=JSON.parse(a)}catch(g){console.error("Error parsing double-encoded MEDIA_DATA string:",g);return}const x=`${r}-${u}`,f=a[x];if(f&&f.progress){const g={progress:f.progress.watched,duration:f.progress.duration,season:f.last_season_watched,episode:f.last_episode_watched};n(g,"MEDIA_DATA")}return}if(o.type==="PLAYER_EVENT"&&o.data)if(o.data.event==="timeupdate"){const a={progress:o.data.time,duration:o.data.duration};a.progress&&a.duration&&n(a,"PLAYER_EVENT")}else o.data.event==="ended"&&(r==="tv"||r==="anime")?console.log('Player reported "ended" event - Videasy will handle next episode automatically.'):o.data.event==="player_ready"&&(console.log("Player is ready."),G(!0))}catch(o){console.error("Error processing message from player:",{origin:t.origin,data:t.data,error:o.message})}},window.addEventListener("message",i),()=>{window.removeEventListener("message",i)}},[d,N,ae,m,h,y]),b(()=>{if($&&!N&&!ie){const s=setTimeout(()=>{ie||(console.warn("Player ready timeout, starting fallback progress tracking."),us())},1e4);return()=>clearTimeout(s)}},[$,N,ie]);const us=()=>{const s=setInterval(()=>{document.hasFocus()&&console.log("Fallback: Checking for progress...")},15e3);return()=>clearInterval(s)};if(b(()=>(j(!1),!$&&!A&&(T.current=setTimeout(()=>{j(!0),console.log("Stream timeout error")},25e3)),()=>{T.current&&clearTimeout(T.current)}),[$,A,m,h,I]),Ae)return e("div",{class:"container",style:{textAlign:"center",marginTop:"50px"},children:e("div",{class:"error-state",children:[e("h2",{children:"An Error Occurred"}),e("p",{children:Ae}),e("button",{onClick:()=>W("/"),class:"btn btn-primary",children:"Go Home"})]})});if(es)return e("div",{class:"loading-state",children:[e("div",{class:"loading-spinner"}),e("p",{children:"Loading media details..."}),e("p",{children:"If your video doesnt load refresh the page or pick a new server."})]});if(!d)return e("div",{class:"container",children:e("div",{class:"error-state",children:[e("h2",{children:"Unable to Load Media"}),e("p",{children:"We couldn't load the details for this content. This could be due to:"}),e("ul",{children:[e("li",{children:"Network connectivity issues"}),e("li",{children:"The content may no longer be available"}),e("li",{children:"Server maintenance"})]}),e("button",{onClick:()=>window.location.reload(),class:"btn btn-primary",style:{marginTop:"20px"},children:"Try Again"})]})});const{title:pe,name:ve,overview:ms,vote_average:As,release_date:He,first_air_date:O,last_air_date:Ye,runtime:qe,number_of_seasons:ze,genres:Ve,poster_path:je,status:Be}=d,Ge=r==="anime"?u:d.id,ye=Ss(Ge,r);(He||O)&&new Date(He||O).getFullYear();const gs=()=>{const s={...d,id:Ge,type:r};ye?Ts(s):Ps(s)};return e("div",{children:[e($s,{children:e("title",{children:[pe||ve," - Fovi"]})}),ns&&e("div",{className:"trailer-modal",onClick:()=>te(!1),children:e("div",{className:"trailer-content",onClick:s=>s.stopPropagation(),children:[e("span",{className:"close-trailer",onClick:()=>te(!1),children:"×"}),e("iframe",{src:`https://www.youtube.com/embed/${_e.find(s=>s.type==="Trailer")?.key}?autoplay=1`,frameBorder:"0",allow:"autoplay; encrypted-media",allowFullScreen:!0,title:"Trailer"})]})}),e("div",{class:"player-container",children:[!$&&A&&e("div",{class:"stream-error-message",children:[e("p",{children:A.message}),A.canRetry&&e("div",{class:"error-actions",children:[e("button",{onClick:async()=>{Le(!0),setTimeout(()=>{(async()=>{const n=`${S}/stream-url?type=${r}&id=${u}&source=${I}${r==="tv"||r==="anime"?`&season=${m}&episode=${h}`:""}${r==="anime"?`&dub=${V}`:""}`;try{const i=await fetch(n),t=await i.json();if(i.ok)H(t.url),ne(t.isDirectSource),oe(t.qualities||[]),D(null);else throw new Error(t.message)}catch(i){console.error("Retry failed:",i),D({message:"Retry failed. Please try selecting a different source.",canRetry:!0})}Le(!1)})()},1e3)},disabled:Ie,class:"btn retry-btn",children:Ie?"Retrying...":"Retry"}),e("p",{children:"Or try selecting a different source from the list below."})]})]}),!$&&!A&&!Re&&e("div",{class:"stream-loading",children:[e("p",{children:"Loading video stream... "}),e("p",{children:"If your video doesnt load refresh the page or pick a new server."})]}),!$&&!A&&Re&&e("div",{class:"stream-error-message",children:[e("p",{children:"Sorry, this episode failed to load. Please refresh the page."}),e("div",{class:"error-actions",children:[e("button",{onClick:()=>window.location.reload(),class:"btn retry-btn",children:"Refresh"}),e("p",{children:"Or try selecting a different source from the list below if refreshing doesn't work."})]})]}),N?e("video",{ref:ae,src:$,controls:!0,autoPlay:!0,width:"100%"}):$&&e("iframe",{src:$,width:"100%",height:"100%",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"},frameBorder:"0",allowFullScreen:!0,allow:"autoplay; picture-in-picture",sandbox:"allow-forms allow-pointer-lock allow-same-origin allow-scripts allow-top-navigation",title:"Video Player",loading:"eager",referrerPolicy:"no-referrer-when-downgrade",importance:"high",onLoad:()=>{console.log("🎬 Player iframe loaded"),G(!0),I!=="videasy"&&M>30?setTimeout(()=>{const s=document.querySelector("iframe");if(s&&s.contentWindow)try{s.contentWindow.postMessage({type:"SEEK_TO",time:M},"*"),console.log(`📍 Sent seek command to restore progress: ${M}s`)}catch(n){console.log("Could not send seek command:",n)}},500):console.log(I==="videasy"?"📍 Videasy native resume - no seeking needed":"📍 No significant progress to resume, starting from beginning")}})]}),e("div",{class:"container",children:[e("div",{class:"media-details-layout",children:[e("div",{class:"poster",children:[e("img",{src:Qe(je?`${Xe}${je}`:"https://via.placeholder.com/500x750.png?text=No+Image"),alt:pe||ve}),Fe>0&&e("div",{class:"movie-progress-container",children:[e("div",{class:"movie-progress-bar",children:e("div",{class:"movie-progress",style:{width:`${Math.max(2,Fe)}%`}})}),e("div",{class:"movie-progress-text",children:w.duration_seconds>0?`${Math.floor(w.progress_seconds/60)}m / ${Math.floor(w.duration_seconds/60)}m watched`:`${Math.floor(w.progress_seconds/60)}m watched`})]})]}),e("div",{class:"details",children:[e("div",{class:"title-container",children:[e("h1",{children:pe||ve}),e("button",{onClick:gs,class:`favorite-btn ${ye?"favorited":""}`,disabled:!Ne,children:Ne?ye?"♥ Favorited":"♡ Favorite":"..."}),e("button",{onClick:ds,class:"favorite-btn trailer-btn",children:[e("i",{class:"fas fa-film"})," Trailer"]}),!De&&e("span",{class:"login-hint",children:e("small",{children:[e("a",{href:"/login",style:{color:"#007bff",textDecoration:"none"},children:"Log in"})," to save favorites, track progress & continue watching"]})})]}),e("div",{class:"meta",children:[e("span",{class:"rating",children:["★ ",d.vote_average?d.vote_average.toFixed(1):"N/A"]}),(r==="tv"||r==="anime")&&O&&e("span",{style:{marginLeft:8},children:(()=>{const s=O?new Date(O).getFullYear():null;let n=null;return Ye?n=new Date(Ye).getFullYear():Be&&Be.toLowerCase()==="ended"&&(n=s),s&&n&&s===n?`${s}`:s&&n&&n!==s?`${s} - ${n}`:s?`${s} -`:""})()}),qe&&e("span",{children:[qe," min"]}),ze&&e("span",{children:[ze," Seasons"]})]}),e("div",{class:"genres",children:Ve&&Ve.map(s=>e("span",{class:"genre-tag",children:s.name}))}),e("p",{class:"overview",children:ms}),Ue.length>0&&e("div",{class:"quality-selector",children:[e("label",{children:"Quality:"}),Ue.map(s=>e("button",{class:`quality-btn ${$===s.url?"active":""}`,onClick:()=>H(s.url),children:[s.quality,"p"]}))]})]})]}),r==="anime"&&e("div",{class:"select-container",children:[e("label",{for:"dub-select",children:"Audio:"}),e("select",{id:"dub-select",value:V,onChange:s=>ts(s.target.value==="true"),children:[e("option",{value:"false",children:"Subbed"}),e("option",{value:"true",children:"Dubbed"})]})]}),e("div",{class:"selectors-container",children:[(r==="tv"||r==="anime")&&d&&d.seasons&&e("div",{class:"select-container",children:[e("label",{children:"Season:"}),e("div",{class:"selector-buttons",children:d.seasons.filter(s=>s.season_number>0).map(s=>e("button",{class:`selector-btn ${m===s.season_number?"active":""}`,onClick:()=>{console.log(`🎯 User manually selected season ${s.season_number}`),me.current=!0,he.current=null;const n=`/watch/${r}/${u}/season/${s.season_number}/episode/1`;W(n,!0)},children:s.name},s.id))})]}),Te.length>1&&e("div",{class:"select-container",children:[e("label",{children:"Source:"}),e("div",{class:"selector-buttons",children:Te.map(s=>e("button",{class:`selector-btn ${I===s?"active":""}`,onClick:()=>Se(s),children:s},s))})]})]}),(r==="tv"||r==="anime")&&m!==null&&h!==null&&e("div",{class:"episodes-container",children:[e("h3",{children:"Episodes"}),rs?e("div",{class:"loading-spinner"}):e(ws,{children:[e("div",{class:"episode-list",children:z?.episodes?.slice((le-1)*U,le*U)?.map(s=>{const n=os.find(t=>t.season_number===m&&t.episode_number===s.episode_number),i=n&&n.progress_seconds>0?n.duration_seconds&&n.duration_seconds>0?Math.min(100,n.progress_seconds/n.duration_seconds*100):n.progress_seconds>30?5:2:0;return e("div",{class:`episode-card ${s.episode_number===h?"active":""}`,onClick:()=>{console.log(`🎯 User manually selected episode ${s.episode_number}`),me.current=!0,he.current=null;const t=`/watch/${r}/${u}/season/${m}/episode/${s.episode_number}`;W(t,!0)},children:[e("div",{class:"episode-card-image",children:[e("img",{src:Qe(s.still_path?`${Xe}${s.still_path}`:`https://via.placeholder.com/300x169.png?text=${encodeURIComponent(s.name)}`),alt:s.name}),e("div",{class:"episode-number-badge",children:s.episode_number}),i>0&&e("div",{class:"episode-progress-bar",children:e("div",{class:"episode-progress",style:{width:`${Math.max(2,i)}%`}})})]}),e("div",{class:"episode-card-content",children:[e("h4",{children:[s.name,s.air_date&&e("span",{style:{color:"#aaa",fontWeight:400,fontSize:"0.95em",marginLeft:8},children:["• ",(()=>{const t=new Date(s.air_date);return isNaN(t)?null:t.toLocaleDateString(void 0,{month:"short",day:"numeric",year:"numeric"})})()]})]}),e("p",{class:"episode-overview",children:s.overview})]})]},s.id)})}),z?.episodes&&z.episodes.length>U&&(()=>{const s=Math.ceil(z.episodes.length/U),n=10,i=Math.ceil(s/n),t=(ce-1)*n+1,v=Math.min(t+n-1,s),l=Array.from({length:v-t+1},(o,a)=>t+a);return e("div",{class:"pagination-controls",children:[ce>1&&e("button",{onClick:()=>xe(o=>o-1),children:e("i",{class:"fas fa-angle-double-left"})}),l.map(o=>e("button",{class:le===o?"active":"",onClick:()=>J(o),children:o},o)),ce<i&&e("button",{onClick:()=>xe(o=>o+1),children:e("i",{class:"fas fa-angle-double-right"})})]})})()]})]}),$e.length>0&&e("div",{class:"recommendations",children:[e("h2",{children:"More Like This"}),e("div",{class:"movie-grid",children:$e.map(s=>e(Es,{item:s,type:r,progress:null,duration:null},`${s.media_type||r}-${s.id}`))})]})]})]})};export{Ns as default};
//# sourceMappingURL=Watch-CJN93IR6.js.map
