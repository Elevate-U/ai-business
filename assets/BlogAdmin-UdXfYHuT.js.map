{"version":3,"file":"BlogAdmin-UdXfYHuT.js","sources":["../../src/utils/supabase.js","../../src/pages/BlogAdmin.jsx"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\n// Supabase configuration\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Missing Supabase environment variables. Please check your .env file.');\n}\n\n// Create Supabase client\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n        autoRefreshToken: true,\n        persistSession: true,\n        detectSessionInUrl: true\n    },\n    realtime: {\n        params: {\n            eventsPerSecond: 10\n        }\n    }\n});\n\n// Helper function to get the current user\nexport const getCurrentUser = async () => {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error) {\n        console.error('Error getting current user:', error);\n        return null;\n    }\n    return user;\n};\n\n// Helper function to check if user is authenticated\nexport const isAuthenticated = async () => {\n    const user = await getCurrentUser();\n    return !!user;\n};\n\n// Helper function to sign out\nexport const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) {\n        console.error('Error signing out:', error);\n        throw error;\n    }\n};\n\n// Helper function to get storage URL\nexport const getStorageUrl = (bucket, path) => {\n    const { data } = supabase.storage.from(bucket).getPublicUrl(path);\n    return data.publicUrl;\n};\n\n// Helper function to upload file to storage\nexport const uploadFile = async (bucket, path, file, options = {}) => {\n    const { data, error } = await supabase.storage\n        .from(bucket)\n        .upload(path, file, {\n            cacheControl: '3600',\n            upsert: false,\n            ...options\n        });\n    \n    if (error) {\n        console.error('Error uploading file:', error);\n        throw error;\n    }\n    \n    return data;\n};\n\n// Helper function to delete file from storage\nexport const deleteFile = async (bucket, paths) => {\n    const { data, error } = await supabase.storage\n        .from(bucket)\n        .remove(Array.isArray(paths) ? paths : [paths]);\n    \n    if (error) {\n        console.error('Error deleting file:', error);\n        throw error;\n    }\n    \n    return data;\n};\n\n// Helper function to handle database errors\nexport const handleDatabaseError = (error, operation = 'database operation') => {\n    console.error(`Error during ${operation}:`, error);\n    \n    // Common error messages\n    const errorMessages = {\n        '23505': 'This item already exists.',\n        '23503': 'Cannot delete this item because it is referenced by other data.',\n        '42501': 'You do not have permission to perform this action.',\n        'PGRST116': 'The requested item was not found.',\n        'PGRST301': 'Row Level Security policy violation.'\n    };\n    \n    const errorCode = error.code || error.error_description || error.message;\n    const userMessage = errorMessages[errorCode] || `An error occurred during ${operation}. Please try again.`;\n    \n    return {\n        error: true,\n        message: userMessage,\n        details: error\n    };\n};\n\n// Helper function for paginated queries\nexport const paginatedQuery = async (query, page = 1, limit = 10) => {\n    const from = (page - 1) * limit;\n    const to = from + limit - 1;\n    \n    const { data, error, count } = await query\n        .range(from, to)\n        .select('*', { count: 'exact' });\n    \n    if (error) {\n        throw error;\n    }\n    \n    const totalPages = Math.ceil(count / limit);\n    \n    return {\n        data,\n        pagination: {\n            page,\n            limit,\n            total: count,\n            totalPages,\n            hasNext: page < totalPages,\n            hasPrev: page > 1\n        }\n    };\n};\n\n// Helper function to generate unique filename\nexport const generateUniqueFilename = (originalName, prefix = '') => {\n    const timestamp = Date.now();\n    const random = Math.random().toString(36).substring(2, 8);\n    const extension = originalName.split('.').pop();\n    const nameWithoutExt = originalName.replace(/\\.[^/.]+$/, '');\n    \n    return `${prefix}${prefix ? '_' : ''}${nameWithoutExt}_${timestamp}_${random}.${extension}`;\n};\n\n// Helper function to validate file type\nexport const validateFileType = (file, allowedTypes = ['image/jpeg', 'image/png', 'image/webp', 'image/gif']) => {\n    if (!file || !file.type) {\n        return { valid: false, error: 'Invalid file' };\n    }\n    \n    if (!allowedTypes.includes(file.type)) {\n        return { \n            valid: false, \n            error: `File type ${file.type} is not allowed. Allowed types: ${allowedTypes.join(', ')}` \n        };\n    }\n    \n    return { valid: true };\n};\n\n// Helper function to validate file size\nexport const validateFileSize = (file, maxSizeInMB = 5) => {\n    if (!file || !file.size) {\n        return { valid: false, error: 'Invalid file' };\n    }\n    \n    const maxSizeInBytes = maxSizeInMB * 1024 * 1024;\n    \n    if (file.size > maxSizeInBytes) {\n        return { \n            valid: false, \n            error: `File size ${(file.size / 1024 / 1024).toFixed(2)}MB exceeds maximum allowed size of ${maxSizeInMB}MB` \n        };\n    }\n    \n    return { valid: true };\n};\n\nexport default supabase;","import { h } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\nimport { route } from 'preact-router';\nimport { BlogAPI } from '../utils/blogApi.js';\nimport ImageProcessor from '../utils/imageProcessor.js';\nimport { updatePageTitle, updateMetaDescription } from '../utils/seoUtils.js';\nimport { supabase } from '../utils/supabase.js';\nimport { useAuth } from '../context/Auth';\nimport Header from '../components/Header';\nimport './BlogAdmin.css';\n\n// Enhanced CSS styles for the blog admin interface\nconst adminStyles = `\n    .blog-admin {\n        min-height: 100vh;\n        background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);\n        color: white;\n        padding: 0;\n    }\n\n    .admin-header {\n        background: rgba(255, 255, 255, 0.05);\n        backdrop-filter: blur(10px);\n        border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n        padding: 2rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        flex-wrap: wrap;\n        gap: 1rem;\n    }\n\n    .admin-header h1 {\n        margin: 0;\n        font-size: 2rem;\n        font-weight: 700;\n        background: linear-gradient(45deg, #667eea, #764ba2);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n    }\n\n    .header-actions {\n        display: flex;\n        gap: 1rem;\n        align-items: center;\n    }\n\n    .refresh-btn, .create-post-btn {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        padding: 0.875rem 1.75rem;\n        border: none;\n        border-radius: 12px;\n        font-weight: 600;\n        cursor: pointer;\n        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n        text-decoration: none;\n        font-size: 0.95rem;\n        backdrop-filter: blur(10px);\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n    }\n\n    .refresh-btn {\n        background: rgba(255, 255, 255, 0.1);\n        color: white;\n        border: 1px solid rgba(255, 255, 255, 0.2);\n    }\n\n    .refresh-btn:hover {\n        background: rgba(255, 255, 255, 0.2);\n        transform: translateY(-2px);\n        box-shadow: 0 6px 20px rgba(255, 255, 255, 0.1);\n        border-color: rgba(255, 255, 255, 0.3);\n    }\n\n    .refresh-btn:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n        transform: none;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    }\n\n    .refresh-btn .icon.spinning {\n        animation: spin 1s linear infinite;\n    }\n\n    @keyframes spin {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n    }\n\n    .create-post-btn {\n        background: linear-gradient(45deg, #667eea, #764ba2);\n        color: white;\n        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n    }\n\n    .create-post-btn:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);\n    }\n\n    .stats-dashboard {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        gap: 1.5rem;\n        margin: 2rem;\n        margin-bottom: 2rem;\n    }\n\n    .stat-card {\n        background: rgba(255, 255, 255, 0.05);\n        backdrop-filter: blur(10px);\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        border-radius: 12px;\n        padding: 1.5rem;\n        text-align: center;\n        transition: all 0.3s ease;\n    }\n\n    .stat-card:hover {\n        transform: translateY(-4px);\n        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);\n        border-color: rgba(102, 126, 234, 0.3);\n    }\n\n    .stat-card h3 {\n        margin: 0 0 0.5rem 0;\n        font-size: 0.9rem;\n        color: rgba(255, 255, 255, 0.7);\n        text-transform: uppercase;\n        letter-spacing: 0.5px;\n    }\n\n    .stat-number {\n        font-size: 2.5rem;\n        font-weight: 700;\n        margin: 0;\n        background: linear-gradient(45deg, #667eea, #764ba2);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n    }\n\n    .admin-controls {\n        margin: 2rem;\n        background: rgba(255, 255, 255, 0.05);\n        backdrop-filter: blur(10px);\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        border-radius: 12px;\n        padding: 1.5rem;\n        display: flex;\n        gap: 1rem;\n        align-items: center;\n        flex-wrap: wrap;\n    }\n\n    .search-form {\n        display: flex;\n        gap: 0.5rem;\n        flex: 1;\n        min-width: 250px;\n        position: relative;\n    }\n\n    .search-input {\n        flex: 1;\n        background: rgba(255, 255, 255, 0.1);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        border-radius: 12px;\n        padding: 0.875rem 1.25rem;\n        color: white;\n        font-size: 0.95rem;\n        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n        backdrop-filter: blur(10px);\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    }\n\n    .search-input:focus {\n        outline: none;\n        border-color: #667eea;\n        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.15), 0 4px 20px rgba(0, 0, 0, 0.2);\n        background: rgba(255, 255, 255, 0.15);\n        transform: translateY(-1px);\n    }\n\n    .search-input::placeholder {\n        color: rgba(255, 255, 255, 0.5);\n        font-style: italic;\n    }\n\n    .search-btn {\n        background: linear-gradient(45deg, #667eea, #764ba2);\n        border: none;\n        border-radius: 12px;\n        padding: 0.875rem 1.75rem;\n        color: white;\n        font-weight: 600;\n        cursor: pointer;\n        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        font-size: 0.95rem;\n    }\n\n    .search-btn:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 6px 25px rgba(102, 126, 234, 0.4);\n        background: linear-gradient(45deg, #764ba2, #667eea);\n    }\n\n    .search-btn:active {\n        transform: translateY(0);\n        box-shadow: 0 2px 10px rgba(102, 126, 234, 0.3);\n    }\n\n    .filters {\n        display: flex;\n        gap: 1rem;\n    }\n\n    .filter-select {\n        background: rgba(255, 255, 255, 0.1);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        border-radius: 12px;\n        padding: 0.75rem 1rem;\n        color: white;\n        font-size: 0.9rem;\n        min-width: 150px;\n        cursor: pointer;\n        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n        backdrop-filter: blur(10px);\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    }\n\n    .filter-select:hover {\n        background: rgba(255, 255, 255, 0.15);\n        border-color: rgba(255, 255, 255, 0.3);\n        transform: translateY(-1px);\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n    }\n\n    .filter-select:focus {\n        outline: none;\n        border-color: #667eea;\n        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.15), 0 4px 20px rgba(0, 0, 0, 0.2);\n        background: rgba(255, 255, 255, 0.2);\n    }\n\n    .filter-select option {\n        background: #1a1a2e;\n        color: white;\n    }\n\n    .bulk-actions-toolbar {\n        margin: 0 2rem;\n        background: rgba(102, 126, 234, 0.1);\n        border: 1px solid rgba(102, 126, 234, 0.3);\n        border-radius: 12px;\n        padding: 1rem;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        flex-wrap: wrap;\n        gap: 1rem;\n        backdrop-filter: blur(10px);\n    }\n\n    .bulk-info {\n        color: #667eea;\n        font-weight: 500;\n    }\n\n    .bulk-actions {\n        display: flex;\n        gap: 0.5rem;\n        flex-wrap: wrap;\n    }\n\n    .bulk-btn {\n        padding: 0.5rem 1rem;\n        border: none;\n        border-radius: 12px;\n        font-size: 0.85rem;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        backdrop-filter: blur(10px);\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    }\n\n    .bulk-btn.publish-btn {\n        background: rgba(34, 197, 94, 0.2);\n        color: #22c55e;\n        border: 1px solid rgba(34, 197, 94, 0.3);\n    }\n\n    .bulk-btn.draft-btn {\n        background: rgba(251, 191, 36, 0.2);\n        color: #fbbf24;\n        border: 1px solid rgba(251, 191, 36, 0.3);\n    }\n\n    .bulk-btn.delete-btn {\n        background: rgba(239, 68, 68, 0.2);\n        color: #ef4444;\n        border: 1px solid rgba(239, 68, 68, 0.3);\n    }\n\n    .bulk-btn.cancel-btn {\n        background: rgba(255, 255, 255, 0.1);\n        color: white;\n        border: 1px solid rgba(255, 255, 255, 0.2);\n    }\n\n    .bulk-btn:hover {\n        transform: translateY(-1px);\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n    }\n\n    .bulk-btn:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n        transform: none;\n    }\n\n    .posts-table-container {\n        margin: 2rem;\n        background: rgba(255, 255, 255, 0.05);\n        backdrop-filter: blur(10px);\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        border-radius: 12px;\n        overflow: hidden;\n    }\n\n    .posts-table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n\n    .posts-table thead {\n        background: rgba(255, 255, 255, 0.1);\n    }\n\n    .posts-table th {\n        padding: 1rem;\n        text-align: left;\n        font-weight: 600;\n        color: rgba(255, 255, 255, 0.9);\n        font-size: 0.85rem;\n        text-transform: uppercase;\n        letter-spacing: 0.5px;\n        border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    }\n\n    .posts-table tbody tr {\n        border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n        transition: all 0.2s ease;\n    }\n\n    .posts-table tbody tr:hover {\n        background: rgba(255, 255, 255, 0.02);\n    }\n\n    .posts-table tbody tr.selected {\n        background: rgba(102, 126, 234, 0.1);\n        border-color: rgba(102, 126, 234, 0.3);\n    }\n\n    .posts-table td {\n        padding: 1rem;\n        vertical-align: middle;\n    }\n\n    .checkbox-cell {\n        width: 40px;\n        text-align: center;\n    }\n\n    .post-title-cell {\n        min-width: 250px;\n    }\n\n    .post-title-info h4 {\n        margin: 0 0 0.25rem 0;\n        font-weight: 600;\n        color: white;\n        font-size: 1rem;\n    }\n\n    .post-excerpt {\n        color: rgba(255, 255, 255, 0.6);\n        font-size: 0.85rem;\n        line-height: 1.4;\n        margin: 0;\n        display: -webkit-box;\n        -webkit-line-clamp: 2;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n    }\n\n    .category-badge {\n        display: inline-flex;\n        align-items: center;\n        padding: 0.25rem 0.75rem;\n        border-radius: 20px;\n        font-size: 0.75rem;\n        font-weight: 500;\n        transition: all 0.2s ease;\n    }\n\n    .category-badge.enhanced {\n        border: 1px solid;\n        backdrop-filter: blur(10px);\n    }\n\n    .category-dot {\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        margin-right: 6px;\n    }\n\n    .status-toggle {\n        display: inline-flex;\n        align-items: center;\n        padding: 0.5rem 1rem;\n        border: none;\n        border-radius: 20px;\n        font-size: 0.75rem;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.2s ease;\n    }\n\n    .status-toggle.enhanced {\n        border: 1px solid;\n        backdrop-filter: blur(10px);\n    }\n\n    .status-toggle.published {\n        background: rgba(34, 197, 94, 0.1);\n        color: #22c55e;\n        border-color: rgba(34, 197, 94, 0.3);\n    }\n\n    .status-toggle.draft {\n        background: rgba(251, 191, 36, 0.1);\n        color: #fbbf24;\n        border-color: rgba(251, 191, 36, 0.3);\n    }\n\n    .status-toggle:hover {\n        transform: translateY(-1px);\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n    }\n\n    .status-dot {\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        margin-right: 8px;\n    }\n\n    .status-dot.published {\n        background: #22c55e;\n    }\n\n    .status-dot.draft {\n        background: #fbbf24;\n    }\n\n    .date-cell {\n        min-width: 120px;\n    }\n\n    .date-info {\n        display: flex;\n        flex-direction: column;\n        gap: 0.25rem;\n    }\n\n    .date {\n        color: rgba(255, 255, 255, 0.9);\n        font-size: 0.85rem;\n    }\n\n    .time {\n        color: rgba(255, 255, 255, 0.5);\n        font-size: 0.75rem;\n    }\n\n    .time.relative {\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n    }\n\n    .views-cell {\n        text-align: center;\n        min-width: 80px;\n    }\n\n    .view-count {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 0.25rem;\n    }\n\n    .view-count .count {\n        font-weight: 600;\n        color: white;\n        font-size: 1rem;\n    }\n\n    .view-count .label {\n        color: rgba(255, 255, 255, 0.5);\n        font-size: 0.75rem;\n    }\n\n    .view-icon {\n        width: 12px;\n        height: 12px;\n        opacity: 0.6;\n    }\n\n    .actions-cell {\n        min-width: 120px;\n    }\n\n    .action-buttons {\n        display: flex;\n        gap: 0.5rem;\n        justify-content: center;\n    }\n\n    .edit-btn, .view-btn, .delete-btn, .duplicate-btn, .analytics-btn-small {\n        padding: 0.5rem;\n        border: none;\n        border-radius: 6px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        text-decoration: none;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 32px;\n        height: 32px;\n        font-size: 14px;\n    }\n\n    .edit-btn {\n        background: rgba(59, 130, 246, 0.2);\n        color: #3b82f6;\n        border: 1px solid rgba(59, 130, 246, 0.3);\n    }\n\n    .view-btn {\n        background: rgba(34, 197, 94, 0.2);\n        color: #22c55e;\n        border: 1px solid rgba(34, 197, 94, 0.3);\n    }\n\n    .duplicate-btn {\n        background: rgba(168, 85, 247, 0.2);\n        color: #a855f7;\n        border: 1px solid rgba(168, 85, 247, 0.3);\n    }\n\n    .analytics-btn-small {\n        background: rgba(156, 39, 176, 0.2);\n        color: #9c27b0;\n        border: 1px solid rgba(156, 39, 176, 0.3);\n    }\n\n    .delete-btn {\n        background: rgba(239, 68, 68, 0.2);\n        color: #ef4444;\n        border: 1px solid rgba(239, 68, 68, 0.3);\n    }\n\n    .edit-btn:hover, .view-btn:hover, .delete-btn:hover, .duplicate-btn:hover, .analytics-btn-small:hover {\n        transform: translateY(-1px);\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n    }\n\n    .auto-refresh-btn, .analytics-btn, .export-btn {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        padding: 0.875rem 1.75rem;\n        border: none;\n        border-radius: 12px;\n        font-weight: 600;\n        cursor: pointer;\n        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n        text-decoration: none;\n        font-size: 0.95rem;\n        backdrop-filter: blur(10px);\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n        position: relative;\n        overflow: hidden;\n    }\n\n    .auto-refresh-btn::before,\n    .analytics-btn::before,\n    .export-btn::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n        transition: left 0.5s;\n    }\n\n    .auto-refresh-btn:hover::before,\n    .analytics-btn:hover::before,\n    .export-btn:hover::before {\n        left: 100%;\n    }\n\n    .auto-refresh-btn {\n        background: linear-gradient(135deg, rgba(33, 150, 243, 0.15), rgba(33, 150, 243, 0.05));\n        color: #2196F3;\n        border: 1px solid rgba(33, 150, 243, 0.3);\n    }\n\n    .auto-refresh-btn:hover {\n        background: linear-gradient(135deg, rgba(33, 150, 243, 0.25), rgba(33, 150, 243, 0.15));\n        transform: translateY(-2px);\n        box-shadow: 0 6px 25px rgba(33, 150, 243, 0.3);\n        border-color: rgba(33, 150, 243, 0.4);\n    }\n\n    .auto-refresh-btn.active {\n        background: linear-gradient(135deg, rgba(255, 152, 0, 0.25), rgba(255, 152, 0, 0.15));\n        color: #FF9800;\n        border-color: rgba(255, 152, 0, 0.4);\n        box-shadow: 0 4px 20px rgba(255, 152, 0, 0.3);\n    }\n\n    .auto-refresh-btn.active:hover {\n        background: linear-gradient(135deg, rgba(255, 152, 0, 0.35), rgba(255, 152, 0, 0.25));\n        box-shadow: 0 6px 30px rgba(255, 152, 0, 0.4);\n    }\n\n    .analytics-btn {\n        background: linear-gradient(135deg, rgba(156, 39, 176, 0.15), rgba(156, 39, 176, 0.05));\n        color: #9C27B0;\n        border: 1px solid rgba(156, 39, 176, 0.3);\n    }\n\n    .analytics-btn:hover {\n        background: linear-gradient(135deg, rgba(156, 39, 176, 0.25), rgba(156, 39, 176, 0.15));\n        transform: translateY(-2px);\n        box-shadow: 0 6px 25px rgba(156, 39, 176, 0.3);\n        border-color: rgba(156, 39, 176, 0.4);\n    }\n\n    .export-btn {\n        background: linear-gradient(135deg, rgba(96, 125, 139, 0.15), rgba(96, 125, 139, 0.05));\n        color: #607D8B;\n        border: 1px solid rgba(96, 125, 139, 0.3);\n    }\n\n    .export-btn:hover {\n        background: linear-gradient(135deg, rgba(96, 125, 139, 0.25), rgba(96, 125, 139, 0.15));\n        transform: translateY(-2px);\n        box-shadow: 0 6px 25px rgba(96, 125, 139, 0.3);\n        border-color: rgba(96, 125, 139, 0.4);\n    }\n\n    .last-refresh {\n        font-size: 0.8rem;\n        color: rgba(255, 255, 255, 0.6);\n        margin-left: 1rem;\n        padding: 0.5rem 1rem;\n        background: rgba(255, 255, 255, 0.05);\n        border-radius: 8px;\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        backdrop-filter: blur(5px);\n        font-style: italic;\n    }\n\n    .analytics-tooltip {\n        position: absolute;\n        background: rgba(0, 0, 0, 0.8);\n        color: white;\n        padding: 4px 8px;\n        border-radius: 4px;\n        font-size: 10px;\n        margin-top: 4px;\n        z-index: 1000;\n    }\n\n    .analytics-section {\n        margin: 2rem;\n        background: rgba(255, 255, 255, 0.05);\n        backdrop-filter: blur(10px);\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        border-radius: 12px;\n        padding: 1.5rem;\n    }\n\n    .analytics-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 1rem;\n    }\n\n    .analytics-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        gap: 1rem;\n    }\n\n    .analytics-card {\n        background: rgba(255, 255, 255, 0.05);\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        border-radius: 8px;\n        padding: 1rem;\n        text-align: center;\n    }\n\n    .analytics-card h4 {\n        margin: 0 0 0.5rem 0;\n        color: rgba(255, 255, 255, 0.7);\n        font-size: 0.85rem;\n    }\n\n    .analytics-value {\n        font-size: 1.5rem;\n        font-weight: 600;\n        color: white;\n    }\n\n    .no-posts {\n        text-align: center;\n        padding: 3rem;\n        color: rgba(255, 255, 255, 0.6);\n    }\n\n    .pagination {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 0.5rem;\n        margin: 2rem;\n    }\n\n    .page-btn {\n        padding: 0.5rem 1rem;\n        background: rgba(255, 255, 255, 0.1);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        border-radius: 6px;\n        color: white;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-size: 0.9rem;\n    }\n\n    .page-btn:hover:not(:disabled) {\n        background: rgba(255, 255, 255, 0.2);\n        transform: translateY(-1px);\n    }\n\n    .page-btn:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n\n    .page-btn.active {\n        background: linear-gradient(45deg, #667eea, #764ba2);\n        border-color: transparent;\n    }\n\n    .page-numbers {\n        display: flex;\n        gap: 0.25rem;\n    }\n\n    .error-message {\n        background: rgba(239, 68, 68, 0.1);\n        border: 1px solid rgba(239, 68, 68, 0.3);\n        border-radius: 8px;\n        padding: 1rem;\n        color: #ef4444;\n        margin: 2rem;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    .dismiss-error {\n        background: none;\n        border: none;\n        color: #ef4444;\n        cursor: pointer;\n        font-size: 1.2rem;\n        padding: 0.25rem;\n    }\n\n    .loading-spinner {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        padding: 3rem;\n        gap: 1rem;\n    }\n\n    .spinner {\n        width: 40px;\n        height: 40px;\n        border: 3px solid rgba(255, 255, 255, 0.3);\n        border-radius: 50%;\n        border-top-color: white;\n        animation: spin 1s ease-in-out infinite;\n    }\n\n    @keyframes spin {\n        to { transform: rotate(360deg); }\n    }\n\n    .access-denied {\n        text-align: center;\n        padding: 3rem;\n        max-width: 500px;\n        margin: 0 auto;\n    }\n\n    .access-denied h1 {\n        color: #ef4444;\n        margin-bottom: 1rem;\n    }\n\n    .access-denied p {\n        color: rgba(255, 255, 255, 0.7);\n        margin-bottom: 1rem;\n        line-height: 1.6;\n    }\n\n    .back-to-blog-btn {\n        display: inline-block;\n        padding: 0.75rem 1.5rem;\n        background: linear-gradient(45deg, #667eea, #764ba2);\n        color: white;\n        text-decoration: none;\n        border-radius: 8px;\n        font-weight: 500;\n        transition: all 0.3s ease;\n    }\n\n    .back-to-blog-btn:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);\n    }\n\n    @media (max-width: 768px) {\n        .admin-header {\n            padding: 1rem;\n            flex-direction: column;\n            align-items: stretch;\n        }\n\n        .header-actions {\n            justify-content: center;\n        }\n\n        .stats-dashboard {\n            margin: 1rem;\n            grid-template-columns: 1fr;\n        }\n\n        .admin-controls {\n            margin: 1rem;\n            flex-direction: column;\n            align-items: stretch;\n        }\n\n        .search-form {\n            min-width: auto;\n        }\n\n        .filters {\n            flex-direction: column;\n        }\n\n        .bulk-actions-toolbar {\n            margin: 0 1rem;\n            flex-direction: column;\n            align-items: stretch;\n        }\n\n        .bulk-actions {\n            justify-content: center;\n        }\n\n        .posts-table-container {\n            margin: 1rem;\n            overflow-x: auto;\n        }\n\n        .posts-table {\n            min-width: 800px;\n        }\n\n        .pagination {\n            margin: 1rem;\n            flex-wrap: wrap;\n        }\n\n        .error-message {\n            margin: 1rem;\n        }\n    }\n`;\n\nconst BlogAdmin = () => {\n    // Use authentication context\n    const { user, session, loading: authLoading, authReady } = useAuth();\n    \n    const [posts, setPosts] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [showEditor, setShowEditor] = useState(false);\n    const [editingPost, setEditingPost] = useState(null);\n    const [stats, setStats] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [sortBy, setSortBy] = useState('created_at');\n    const [sortOrder, setSortOrder] = useState('desc');\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [checkingAdmin, setCheckingAdmin] = useState(true);\n    const [adminChecked, setAdminChecked] = useState(false);\n    const [selectedPosts, setSelectedPosts] = useState([]);\n    const [showBulkActions, setShowBulkActions] = useState(false);\n    const [refreshing, setRefreshing] = useState(false);\n    const [autoRefresh, setAutoRefresh] = useState(false);\n    const [lastRefresh, setLastRefresh] = useState(new Date());\n    const [postAnalytics, setPostAnalytics] = useState({});\n    const [showAnalytics, setShowAnalytics] = useState(false);\n\n    const blogAPI = new BlogAPI();\n    const imageProcessor = new ImageProcessor();\n\n    // Cache admin status to avoid repeated checks\n    const checkAdminStatus = async () => {\n        if (adminChecked) return isAdmin; // Return cached result\n        \n        try {\n            console.log('Checking admin status...');\n            setCheckingAdmin(true);\n            const adminStatus = await BlogAPI.isAdmin();\n            console.log('Admin status result:', adminStatus);\n            setIsAdmin(adminStatus);\n            setAdminChecked(true);\n            \n            if (adminStatus) {\n                console.log('User is admin, loading data...');\n                await loadInitialData();\n            } else {\n                console.log('User is not admin');\n                setError('Access denied. Admin privileges required.');\n            }\n            return adminStatus;\n        } catch (err) {\n            console.error('Error checking admin status:', err);\n            setError('Failed to verify admin access: ' + err.message);\n            return false;\n        } finally {\n            setCheckingAdmin(false);\n        }\n    };\n\n    useEffect(() => {\n        updatePageTitle('Blog Admin - Manage Posts');\n        updateMetaDescription('Admin panel for managing blog posts, categories, and content.');\n    }, []);\n\n    // Wait for auth to be ready before checking admin status\n    useEffect(() => {\n        if (!authReady || authLoading) {\n            console.log('Auth not ready yet, waiting...', { authReady, authLoading });\n            return;\n        }\n\n        if (!user || !session) {\n            console.log('No user or session, redirecting to login');\n            setError('Please log in to access the admin panel.');\n            setCheckingAdmin(false);\n            return;\n        }\n\n        const initializeAdmin = async () => {\n            console.log('Auth ready, initializing admin with user:', user?.email);\n            const adminStatus = await checkAdminStatus();\n            if (adminStatus) {\n                await loadPosts();\n            }\n        };\n        \n        initializeAdmin();\n        \n        // Check for edit parameter in URL\n        const urlParams = new URLSearchParams(window.location.hash.split('?')[1]);\n        const editPostId = urlParams.get('edit');\n        if (editPostId) {\n            handleEditPostById(editPostId);\n        }\n    }, [authReady, authLoading, user, session]);\n\n    // Separate effect for posts loading that only triggers when necessary\n    useEffect(() => {\n        if (isAdmin && adminChecked) {\n            loadPosts();\n        }\n    }, [currentPage, searchTerm, selectedCategory, sortBy, sortOrder]);\n\n    // Separate effect for admin status changes\n    useEffect(() => {\n        if (adminChecked && isAdmin) {\n            loadPosts();\n        }\n    }, [isAdmin, adminChecked]);\n\n    const loadInitialData = async () => {\n        if (!isAdmin) return;\n        \n        try {\n            const [categoriesData, statsData] = await Promise.all([\n                BlogAPI.getCategories(),\n                BlogAPI.getBlogStats()\n            ]);\n            setCategories(categoriesData);\n            setStats(statsData);\n        } catch (err) {\n            console.error('Error loading initial data:', err);\n            setError('Failed to load admin data');\n        }\n    };\n\n    const loadPosts = async () => {\n        console.log('loadPosts called, isAdmin:', isAdmin);\n        if (!isAdmin || !adminChecked) {\n            console.log('User is not admin or admin status not checked, skipping loadPosts');\n            return;\n        }\n        \n        try {\n            setLoading(true);\n            setError(null);\n            console.log('Loading posts...');\n            \n            // Get category slug for filtering\n            const categorySlug = selectedCategory ? \n                categories.find(cat => cat.id === selectedCategory)?.slug : null;\n            \n            // Use the admin function to get all posts\n            const { data, error } = await supabase\n                .rpc('get_all_blog_posts_admin', {\n                    limit_count: 10,\n                    offset_count: (currentPage - 1) * 10,\n                    filter_status: null, // Show all statuses\n                    filter_category_slug: categorySlug\n                });\n            \n            console.log('Supabase response:', { data, error });\n            if (error) throw error;\n            \n            let postsData = data || [];\n            \n            // Client-side search filtering if search term exists\n            if (searchTerm) {\n                const searchLower = searchTerm.toLowerCase();\n                postsData = postsData.filter(post => \n                    post.title.toLowerCase().includes(searchLower) ||\n                    post.excerpt?.toLowerCase().includes(searchLower) ||\n                    post.category_name?.toLowerCase().includes(searchLower)\n                );\n            }\n            \n            // Client-side sorting\n            postsData.sort((a, b) => {\n                let aVal, bVal;\n                switch (sortBy) {\n                    case 'title':\n                        aVal = a.title.toLowerCase();\n                        bVal = b.title.toLowerCase();\n                        break;\n                    case 'updated_at':\n                        aVal = new Date(a.updated_at);\n                        bVal = new Date(b.updated_at);\n                        break;\n                    case 'created_at':\n                    default:\n                        aVal = new Date(a.created_at);\n                        bVal = new Date(b.created_at);\n                        break;\n                }\n                \n                if (sortOrder === 'asc') {\n                    return aVal > bVal ? 1 : -1;\n                } else {\n                    return aVal < bVal ? 1 : -1;\n                }\n            });\n            \n            setPosts(postsData);\n            // For now, we'll handle pagination client-side\n            setTotalPages(Math.ceil(postsData.length / 10));\n        } catch (err) {\n            console.error('Error loading posts:', err);\n            setError('Failed to load posts: ' + err.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleCreatePost = () => {\n        setEditingPost(null);\n        setShowEditor(true);\n    };\n\n    const handleEditPost = (post) => {\n        setEditingPost(post);\n        setShowEditor(true);\n    };\n\n    const handleEditPostById = async (postId) => {\n        try {\n            setLoading(true);\n            const post = await BlogAPI.getPostById(postId);\n            if (post) {\n                setEditingPost(post);\n                setShowEditor(true);\n            } else {\n                setError('Post not found');\n            }\n        } catch (err) {\n            console.error('Error loading post for editing:', err);\n            setError('Failed to load post for editing');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleDeletePost = async (postId) => {\n        if (!confirm('Are you sure you want to delete this post? This action cannot be undone.')) {\n            return;\n        }\n\n        try {\n            setLoading(true);\n            await BlogAPI.deletePost(postId);\n            await loadPosts();\n            await loadInitialData(); // Refresh stats\n            // Remove from selected posts if it was selected\n            setSelectedPosts(prev => prev.filter(id => id !== postId));\n        } catch (err) {\n            console.error('Error deleting post:', err);\n            setError('Failed to delete post: ' + err.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Bulk Actions\n    const handleSelectPost = (postId) => {\n        setSelectedPosts(prev => {\n            if (prev.includes(postId)) {\n                const newSelected = prev.filter(id => id !== postId);\n                setShowBulkActions(newSelected.length > 0);\n                return newSelected;\n            } else {\n                const newSelected = [...prev, postId];\n                setShowBulkActions(true);\n                return newSelected;\n            }\n        });\n    };\n\n    const handleSelectAll = () => {\n        if (selectedPosts.length === posts.length) {\n            setSelectedPosts([]);\n            setShowBulkActions(false);\n        } else {\n            const allPostIds = posts.map(post => post.id);\n            setSelectedPosts(allPostIds);\n            setShowBulkActions(true);\n        }\n    };\n\n    const handleBulkDelete = async () => {\n        if (selectedPosts.length === 0) return;\n        \n        if (!confirm(`Are you sure you want to delete ${selectedPosts.length} posts? This action cannot be undone.`)) {\n            return;\n        }\n\n        try {\n            setLoading(true);\n            setError(null);\n\n            // Use the new bulk delete API method\n            await BlogAPI.bulkDeletePosts(selectedPosts);\n\n            // Remove deleted posts from state\n            setPosts(prevPosts => prevPosts.filter(post => !selectedPosts.includes(post.id)));\n            setSelectedPosts([]);\n            setShowBulkActions(false);\n        } catch (err) {\n            console.error('Error bulk deleting posts:', err);\n            setError('Failed to delete selected posts');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleBulkStatusChange = async (newStatus) => {\n        if (selectedPosts.length === 0) return;\n        \n        try {\n            setLoading(true);\n            setError(null);\n            \n            // Use the new bulk update API method\n             await BlogAPI.bulkUpdateStatus(selectedPosts, newStatus);\n            \n            // Update posts in state\n            setPosts(prevPosts => \n                prevPosts.map(post => \n                    selectedPosts.includes(post.id) \n                        ? { ...post, status: newStatus }\n                        : post\n                )\n            );\n            \n            setSelectedPosts([]);\n            setShowBulkActions(false);\n        } catch (err) {\n            console.error('Error updating posts:', err);\n            setError('Failed to update selected posts');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleRefresh = async () => {\n        setRefreshing(true);\n        try {\n            await Promise.all([loadPosts(), loadInitialData()]);\n            setLastRefresh(new Date());\n        } catch (err) {\n            console.error('Error refreshing data:', err);\n            setError('Failed to refresh data');\n        } finally {\n            setRefreshing(false);\n        }\n    };\n\n    // Auto-refresh functionality\n    useEffect(() => {\n        if (!autoRefresh || !isAdmin) return;\n        \n        const interval = setInterval(() => {\n            handleRefresh();\n        }, 30000); // Refresh every 30 seconds\n        \n        return () => clearInterval(interval);\n    }, [autoRefresh, isAdmin]);\n\n    // Load post analytics\n    const loadPostAnalytics = async (postId) => {\n        try {\n            const analytics = await BlogAPI.getPostAnalytics(postId);\n            setPostAnalytics(prev => ({ ...prev, [postId]: analytics }));\n        } catch (err) {\n            console.error('Error loading post analytics:', err);\n        }\n    };\n\n    // Export posts functionality\n    const handleExportPosts = () => {\n        try {\n            const exportData = posts.map(post => ({\n                title: post.title,\n                slug: post.slug,\n                excerpt: post.excerpt,\n                content: post.content,\n                status: post.status,\n                category: post.category_name,\n                tags: post.tags,\n                created_at: post.created_at,\n                updated_at: post.updated_at,\n                view_count: post.view_count\n            }));\n            \n            const dataStr = JSON.stringify(exportData, null, 2);\n            const dataBlob = new Blob([dataStr], { type: 'application/json' });\n            const url = URL.createObjectURL(dataBlob);\n            \n            const link = document.createElement('a');\n            link.href = url;\n            link.download = `blog-posts-export-${new Date().toISOString().split('T')[0]}.json`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            URL.revokeObjectURL(url);\n        } catch (err) {\n            console.error('Error exporting posts:', err);\n            setError('Failed to export posts');\n        }\n    };\n\n    // Duplicate post functionality\n    const handleDuplicatePost = async (post) => {\n        try {\n            setLoading(true);\n            const duplicatedPost = {\n                ...post,\n                title: `${post.title} (Copy)`,\n                slug: `${post.slug}-copy-${Date.now()}`,\n                status: 'draft',\n                created_at: undefined,\n                updated_at: undefined,\n                id: undefined\n            };\n            \n            await BlogAPI.createPost(duplicatedPost);\n            await loadPosts();\n            await loadInitialData();\n        } catch (err) {\n            console.error('Error duplicating post:', err);\n            setError('Failed to duplicate post');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleTogglePublished = async (post) => {\n        try {\n            setLoading(true);\n            const newStatus = post.status === 'published' ? 'draft' : 'published';\n            await BlogAPI.updatePost(post.id, { status: newStatus });\n            \n            // Update the post in the local state\n            setPosts(prevPosts => \n                prevPosts.map(p => \n                    p.id === post.id \n                        ? { ...p, status: newStatus, updated_at: new Date().toISOString() }\n                        : p\n                )\n            );\n            \n            // Refresh stats after status change\n            await loadInitialData();\n        } catch (err) {\n            console.error('Error updating post status:', err);\n            setError('Failed to update post status');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleEditorClose = () => {\n        setShowEditor(false);\n        setEditingPost(null);\n        loadPosts();\n        loadInitialData(); // Refresh stats\n    };\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setCurrentPage(1);\n        loadPosts();\n    };\n\n    const formatDate = (dateString) => {\n        return new Date(dateString).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric'\n        });\n    };\n\n    const formatTime = (dateString) => {\n        return new Date(dateString).toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n\n    const formatRelativeTime = (dateString) => {\n        const now = new Date();\n        const date = new Date(dateString);\n        const diffInSeconds = Math.floor((now - date) / 1000);\n        \n        if (diffInSeconds < 60) return 'Just now';\n        if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;\n        if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;\n        if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)}d ago`;\n        return formatDate(dateString);\n    };\n\n    if (checkingAdmin || authLoading || !authReady) {\n        return (\n            <>\n                <Header />\n                <main className=\"blog-admin\">\n                    <div className=\"loading-spinner\">\n                        <div className=\"spinner\"></div>\n                        <p>{authLoading || !authReady ? 'Loading authentication...' : 'Checking admin access...'}</p>\n                    </div>\n                </main>\n            </>\n        );\n    }\n\n    if (!isAdmin) {\n        return (\n            <>\n                <Header />\n                <main className=\"blog-admin\">\n                    <div className=\"access-denied\">\n                        <h1>Access Denied</h1>\n                        <p>You need administrator privileges to access the blog admin panel.</p>\n                        <p>If you believe you should have access, please contact the site administrator.</p>\n                        <a href=\"/blog\" className=\"back-to-blog-btn\">← Back to Blog</a>\n                    </div>\n                </main>\n            </>\n        );\n    }\n\n    if (showEditor) {\n        return (\n            <BlogEditor\n                post={editingPost}\n                categories={categories}\n                onClose={handleEditorClose}\n                blogAPI={BlogAPI}\n                imageProcessor={imageProcessor}\n            />\n        );\n    }\n\n    return (\n        <>\n            <Header />\n            <main className=\"blog-admin\">\n            <div className=\"admin-header\">\n                <h1>Blog Admin</h1>\n                <div className=\"header-actions\">\n                    <button \n                        className=\"refresh-btn\" \n                        onClick={handleRefresh}\n                        disabled={refreshing}\n                        title=\"Refresh Data\"\n                    >\n                        <span className={`icon ${refreshing ? 'spinning' : ''}`}>🔄</span>\n                        {refreshing ? 'Refreshing...' : 'Refresh'}\n                    </button>\n                    \n                    <button\n                        className={`auto-refresh-btn ${autoRefresh ? 'active' : ''}`}\n                        onClick={() => setAutoRefresh(!autoRefresh)}\n                        title=\"Toggle Auto-refresh (30s)\"\n                    >\n                        <span className=\"icon\">{autoRefresh ? '⏸️' : '▶️'}</span>\n                        Auto\n                    </button>\n                    \n                    <button\n                        className=\"analytics-btn\"\n                        onClick={() => setShowAnalytics(!showAnalytics)}\n                        title=\"Toggle Analytics View\"\n                    >\n                        <span className=\"icon\">📊</span>\n                        Analytics\n                    </button>\n                    \n                    <button\n                        className=\"export-btn\"\n                        onClick={handleExportPosts}\n                        title=\"Export Posts\"\n                    >\n                        <span className=\"icon\">📥</span>\n                        Export\n                    </button>\n                    \n                    <button className=\"create-post-btn\" onClick={handleCreatePost}>\n                        <span className=\"icon\">+</span>\n                        Create New Post\n                    </button>\n                    \n                    <span className=\"last-refresh\">\n                        Last updated: {formatRelativeTime(lastRefresh)}\n                    </span>\n                </div>\n            </div>\n\n            {/* Stats Dashboard */}\n            {stats && (\n                <div className=\"stats-dashboard\">\n                    <div className=\"stat-card\">\n                        <h3>Total Posts</h3>\n                        <p className=\"stat-number\">{stats.totalPosts}</p>\n                    </div>\n                    <div className=\"stat-card\">\n                        <h3>Published</h3>\n                        <p className=\"stat-number\">{stats.publishedPosts}</p>\n                    </div>\n                    <div className=\"stat-card\">\n                        <h3>Drafts</h3>\n                        <p className=\"stat-number\">{stats.draftPosts}</p>\n                    </div>\n                    <div className=\"stat-card\">\n                        <h3>Categories</h3>\n                        <p className=\"stat-number\">{categories.length}</p>\n                    </div>\n                </div>\n            )}\n\n            {/* Filters and Search */}\n            <div className=\"admin-controls\">\n                <form className=\"search-form\" onSubmit={handleSearch}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search posts...\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                        className=\"search-input\"\n                    />\n                    <button type=\"submit\" className=\"search-btn\">Search</button>\n                </form>\n\n                <div className=\"filters\">\n                    <select\n                        value={selectedCategory}\n                        onChange={(e) => {\n                            setSelectedCategory(e.target.value);\n                            setCurrentPage(1);\n                        }}\n                        className=\"filter-select\"\n                    >\n                        <option value=\"\">All Categories</option>\n                        {categories.map(category => (\n                            <option key={category.id} value={category.id}>\n                                {category.name}\n                            </option>\n                        ))}\n                    </select>\n\n                    <select\n                        value={`${sortBy}-${sortOrder}`}\n                        onChange={(e) => {\n                            const [field, order] = e.target.value.split('-');\n                            setSortBy(field);\n                            setSortOrder(order);\n                            setCurrentPage(1);\n                        }}\n                        className=\"filter-select\"\n                    >\n                        <option value=\"created_at-desc\">Newest First</option>\n                        <option value=\"created_at-asc\">Oldest First</option>\n                        <option value=\"title-asc\">Title A-Z</option>\n                        <option value=\"title-desc\">Title Z-A</option>\n                        <option value=\"updated_at-desc\">Recently Updated</option>\n                    </select>\n                </div>\n            </div>\n\n            {/* Bulk Actions Toolbar */}\n            {showBulkActions && (\n                <div className=\"bulk-actions-toolbar\">\n                    <div className=\"bulk-info\">\n                        <span>{selectedPosts.length} post{selectedPosts.length !== 1 ? 's' : ''} selected</span>\n                    </div>\n                    <div className=\"bulk-actions\">\n                        <button \n                            className=\"bulk-btn publish-btn\"\n                            onClick={() => handleBulkStatusChange('published')}\n                            disabled={loading}\n                        >\n                            📢 Publish Selected\n                        </button>\n                        <button \n                            className=\"bulk-btn draft-btn\"\n                            onClick={() => handleBulkStatusChange('draft')}\n                            disabled={loading}\n                        >\n                            📝 Move to Draft\n                        </button>\n                        <button \n                            className=\"bulk-btn delete-btn\"\n                            onClick={handleBulkDelete}\n                            disabled={loading}\n                        >\n                            🗑️ Delete Selected\n                        </button>\n                        <button \n                            className=\"bulk-btn cancel-btn\"\n                            onClick={() => {\n                                setSelectedPosts([]);\n                                setShowBulkActions(false);\n                            }}\n                        >\n                            ✕ Cancel\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            {/* Posts Table */}\n            {error && (\n                <div className=\"error-message\">\n                    <p>{error}</p>\n                    <button onClick={() => setError(null)} className=\"dismiss-error\">✕</button>\n                </div>\n            )}\n\n            {loading ? (\n                <div className=\"loading-spinner\">\n                    <div className=\"spinner\"></div>\n                    <p>Loading posts...</p>\n                </div>\n            ) : (\n                <div className=\"posts-table-container\">\n                    <table className=\"posts-table\">\n                        <thead>\n                            <tr>\n                                <th className=\"checkbox-cell\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={posts.length > 0 && selectedPosts.length === posts.length}\n                                        onChange={handleSelectAll}\n                                        title=\"Select All\"\n                                    />\n                                </th>\n                                <th>Title</th>\n                                <th>Category</th>\n                                <th>Status</th>\n                                <th>Created</th>\n                                <th>Updated</th>\n                                <th>Views</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {posts.map(post => (\n                                <tr key={post.id} className={`${post.status === 'published' ? 'published' : 'draft'} ${selectedPosts.includes(post.id) ? 'selected' : ''}`}>\n                                    <td className=\"checkbox-cell\">\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={selectedPosts.includes(post.id)}\n                                            onChange={() => handleSelectPost(post.id)}\n                                        />\n                                    </td>\n                                    <td className=\"post-title-cell\">\n                                        <div className=\"post-title-info\">\n                                            <h4>{post.title}</h4>\n                                            <p className=\"post-excerpt\">{post.excerpt}</p>\n                                        </div>\n                                    </td>\n                                    <td>\n                                        <span \n                                            className=\"category-badge enhanced\"\n                                            style={{ \n                                                backgroundColor: (post.category_color || '#6366f1') + '15',\n                                                borderColor: (post.category_color || '#6366f1') + '40',\n                                                color: post.category_color || '#6366f1'\n                                            }}\n                                        >\n                                            <div \n                                                className=\"category-dot\"\n                                                style={{ backgroundColor: post.category_color || '#6366f1' }}\n                                            ></div>\n                                            {post.category_name || 'Uncategorized'}\n                                        </span>\n                                    </td>\n                                    <td>\n                                        <button\n                                            className={`status-toggle enhanced ${post.status === 'published' ? 'published' : 'draft'}`}\n                                            onClick={() => handleTogglePublished(post)}\n                                            disabled={loading}\n                                        >\n                                            <div className={`status-dot ${post.status === 'published' ? 'published' : 'draft'}`}></div>\n                                            {post.status === 'published' ? 'Published' : 'Draft'}\n                                        </button>\n                                    </td>\n                                    <td className=\"date-cell\">\n                                        <div className=\"date-info\">\n                                            <span className=\"date\">{formatDate(post.created_at)}</span>\n                                            <span className=\"time\">{formatTime(post.created_at)}</span>\n                                        </div>\n                                    </td>\n                                    <td className=\"date-cell\">\n                                        <div className=\"date-info\">\n                                            <span className=\"date\">{formatDate(post.updated_at)}</span>\n                                            <span className=\"time relative\">{formatRelativeTime(post.updated_at)}</span>\n                                        </div>\n                                    </td>\n                                    <td className=\"views-cell\">\n                                        <div className=\"view-count\">\n                                            <span className=\"count\">{post.view_count || 0}</span>\n                                            <span className=\"label\">views</span>\n                                            <svg className=\"view-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                                            </svg>\n                                            {showAnalytics && postAnalytics[post.id] && (\n                                                <div className=\"analytics-tooltip\">\n                                                    <small>Analytics loaded</small>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </td>\n                                    <td className=\"actions-cell\">\n                                        <div className=\"post-actions\">\n                                            <button\n                                                className=\"action-btn edit\"\n                                                onClick={() => handleEditPost(post)}\n                                                title=\"Edit Post\"\n                                            >\n                                                <span>✏️</span>\n                                                <span>Edit</span>\n                                            </button>\n                                            {post.status === 'published' && (\n                                                <a\n                                                    href={`/#/blog/${post.slug}`}\n                                                    target=\"_blank\"\n                                                    className=\"action-btn view\"\n                                                    title=\"View Post\"\n                                                >\n                                                    <span>👁️</span>\n                                                    <span>View</span>\n                                                </a>\n                                            )}\n                                            <button\n                                                className=\"action-btn duplicate\"\n                                                onClick={() => handleDuplicatePost(post)}\n                                                title=\"Duplicate Post\"\n                                                disabled={loading}\n                                            >\n                                                <span>📋</span>\n                                                <span>Copy</span>\n                                            </button>\n                                            {showAnalytics && (\n                                                <button\n                                                    className=\"action-btn analytics\"\n                                                    onClick={() => loadPostAnalytics(post.id)}\n                                                    title=\"Load Analytics\"\n                                                >\n                                                    <span>📊</span>\n                                                    <span>Stats</span>\n                                                </button>\n                                            )}\n                                            <button\n                                                className=\"action-btn delete\"\n                                                onClick={() => handleDeletePost(post.id)}\n                                                title=\"Delete Post\"\n                                            >\n                                                <span>🗑️</span>\n                                                <span>Delete</span>\n                                            </button>\n                                        </div>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                    {posts.length === 0 && (\n                        <div className=\"no-posts\">\n                            <p>No posts found. Create your first post to get started!</p>\n                        </div>\n                    )}\n                </div>\n            )}\n\n            {/* Analytics Section */}\n            {showAnalytics && (\n                <div className=\"analytics-section\">\n                    <div className=\"analytics-header\">\n                        <h3>Post Analytics Overview</h3>\n                        <button \n                            onClick={() => setShowAnalytics(false)}\n                            className=\"btn btn-secondary\"\n                        >\n                            Hide Analytics\n                        </button>\n                    </div>\n                    <div className=\"analytics-grid\">\n                        <div className=\"analytics-card\">\n                            <h4>Total Posts with Analytics</h4>\n                            <div className=\"analytics-value\">\n                                {Object.keys(postAnalytics).length}\n                            </div>\n                        </div>\n                        <div className=\"analytics-card\">\n                            <h4>Average Views</h4>\n                            <div className=\"analytics-value\">\n                                {Object.keys(postAnalytics).length > 0 \n                                    ? Math.round(Object.values(postAnalytics).reduce((sum, analytics) => sum + (analytics.views || 0), 0) / Object.keys(postAnalytics).length)\n                                    : 0\n                                }\n                            </div>\n                        </div>\n                        <div className=\"analytics-card\">\n                            <h4>Total Engagement</h4>\n                            <div className=\"analytics-value\">\n                                {Object.values(postAnalytics).reduce((sum, analytics) => sum + (analytics.engagement || 0), 0)}\n                            </div>\n                        </div>\n                        <div className=\"analytics-card\">\n                            <h4>Analytics Last Updated</h4>\n                            <div className=\"analytics-value\">\n                                {new Date().toLocaleTimeString()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Pagination */}\n            {totalPages > 1 && (\n                <div className=\"pagination\">\n                    <button\n                        className=\"page-btn\"\n                        onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n                        disabled={currentPage === 1}\n                    >\n                        Previous\n                    </button>\n                    \n                    <div className=\"page-numbers\">\n                        {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\n                            <button\n                                key={page}\n                                className={`page-btn ${page === currentPage ? 'active' : ''}`}\n                                onClick={() => setCurrentPage(page)}\n                            >\n                                {page}\n                            </button>\n                        ))}\n                    </div>\n                    \n                    <button\n                        className=\"page-btn\"\n                        onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n                        disabled={currentPage === totalPages}\n                    >\n                        Next\n                    </button>\n                </div>\n            )}\n            </main>\n        </>\n    );\n};\n\n// Blog Editor Component\nconst BlogEditor = ({ post, categories, onClose, blogAPI, imageProcessor }) => {\n    const [formData, setFormData] = useState({\n        title: post?.title || '',\n        slug: post?.slug || '',\n        excerpt: post?.excerpt || '',\n        content: post?.content || '',\n        category_id: post?.category_id || (categories[0]?.id || ''),\n        featured_image: post?.featured_image || '',\n        tags: post?.tags?.join(', ') || '',\n        status: post?.status || 'draft',\n        meta_title: post?.meta_title || '',\n        meta_description: post?.meta_description || ''\n    });\n    const [saving, setSaving] = useState(false);\n    const [processingImages, setProcessingImages] = useState(false);\n    const [slugManuallyEdited, setSlugManuallyEdited] = useState(!!post?.slug);\n\n    // Auto-generate slug from title\n    useEffect(() => {\n        if (!slugManuallyEdited && formData.title) {\n            const autoSlug = formData.title\n                .toLowerCase()\n                .replace(/[^a-z0-9\\s-]/g, '')\n                .replace(/\\s+/g, '-')\n                .replace(/-+/g, '-')\n                .trim();\n            setFormData(prev => ({ ...prev, slug: autoSlug }));\n        }\n    }, [formData.title, slugManuallyEdited]);\n\n    const handleInputChange = (field, value) => {\n        setFormData(prev => ({ ...prev, [field]: value }));\n        \n        if (field === 'slug') {\n            setSlugManuallyEdited(true);\n        }\n    };\n\n    const handleContentChange = async (content) => {\n        setProcessingImages(true);\n        try {\n            // Process any image URLs in the content\n            const processedContent = await imageProcessor.processContentImages(content);\n            setFormData(prev => ({ ...prev, content: processedContent }));\n        } catch (err) {\n            console.error('Error processing images:', err);\n            setFormData(prev => ({ ...prev, content }));\n        } finally {\n            setProcessingImages(false);\n        }\n    };\n\n    const handleSave = async (publishNow = false) => {\n        if (!formData.title.trim()) {\n            alert('Please enter a title');\n            return;\n        }\n\n        setSaving(true);\n        try {\n            const postData = {\n                ...formData,\n                tags: formData.tags.split(',').map(tag => tag.trim()).filter(Boolean),\n                status: publishNow ? 'published' : (formData.status || 'draft')\n            };\n\n            if (post) {\n                await BlogAPI.updatePost(post.id, postData);\n            } else {\n                await BlogAPI.createPost(postData);\n            }\n\n            onClose();\n        } catch (err) {\n            console.error('Error saving post:', err);\n            alert('Failed to save post');\n        } finally {\n            setSaving(false);\n        }\n    };\n\n    return (\n        <div className=\"blog-editor\">\n            <div className=\"editor-header\">\n                <h2>{post ? 'Edit Post' : 'Create New Post'}</h2>\n                <div className=\"editor-actions\">\n                    <button className=\"cancel-btn\" onClick={onClose} disabled={saving}>\n                        Cancel\n                    </button>\n                    <button \n                        className=\"save-draft-btn\" \n                        onClick={() => handleSave(false)}\n                        disabled={saving || processingImages}\n                    >\n                        {saving ? 'Saving...' : 'Save Draft'}\n                    </button>\n                    <button \n                        className=\"publish-btn\" \n                        onClick={() => handleSave(true)}\n                        disabled={saving || processingImages}\n                    >\n                        {saving ? 'Publishing...' : 'Publish'}\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"editor-content\">\n                <div className=\"editor-main\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Title *</label>\n                        <input\n                            id=\"title\"\n                            type=\"text\"\n                            value={formData.title}\n                            onChange={(e) => handleInputChange('title', e.target.value)}\n                            placeholder=\"Enter post title...\"\n                            className=\"title-input\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"slug\">URL Slug</label>\n                        <input\n                            id=\"slug\"\n                            type=\"text\"\n                            value={formData.slug}\n                            onChange={(e) => handleInputChange('slug', e.target.value)}\n                            placeholder=\"url-friendly-slug\"\n                            className=\"slug-input\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"excerpt\">Excerpt</label>\n                        <textarea\n                            id=\"excerpt\"\n                            value={formData.excerpt}\n                            onChange={(e) => handleInputChange('excerpt', e.target.value)}\n                            placeholder=\"Brief description of the post...\"\n                            className=\"excerpt-input\"\n                            rows=\"3\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"content\">Content *</label>\n                        {processingImages && (\n                            <div className=\"processing-notice\">\n                                Processing images... Please wait.\n                            </div>\n                        )}\n                        <ContentEditor\n                            value={formData.content}\n                            onChange={handleContentChange}\n                            disabled={processingImages}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"editor-sidebar\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"category\">Category</label>\n                        <select\n                            id=\"category\"\n                            value={formData.category_id}\n                            onChange={(e) => handleInputChange('category_id', e.target.value)}\n                            className=\"category-select\"\n                        >\n                            {categories.map(category => (\n                                <option key={category.id} value={category.id}>\n                                    {category.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"featured-image\">Featured Image URL</label>\n                        <input\n                            id=\"featured-image\"\n                            type=\"url\"\n                            value={formData.featured_image}\n                            onChange={(e) => handleInputChange('featured_image', e.target.value)}\n                            placeholder=\"https://example.com/image.jpg\"\n                            className=\"image-input\"\n                        />\n                        {formData.featured_image && (\n                            <div className=\"image-preview\">\n                                <img src={formData.featured_image} alt=\"Featured image preview\" />\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"tags\">Tags</label>\n                        <input\n                            id=\"tags\"\n                            type=\"text\"\n                            value={formData.tags}\n                            onChange={(e) => handleInputChange('tags', e.target.value)}\n                            placeholder=\"tag1, tag2, tag3\"\n                            className=\"tags-input\"\n                        />\n                        <small>Separate tags with commas</small>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"meta-title\">SEO Title</label>\n                        <input\n                            id=\"meta-title\"\n                            type=\"text\"\n                            value={formData.meta_title}\n                            onChange={(e) => handleInputChange('meta_title', e.target.value)}\n                            placeholder=\"SEO optimized title...\"\n                            className=\"meta-input\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"meta-description\">SEO Description</label>\n                        <textarea\n                            id=\"meta-description\"\n                            value={formData.meta_description}\n                            onChange={(e) => handleInputChange('meta_description', e.target.value)}\n                            placeholder=\"SEO meta description...\"\n                            className=\"meta-input\"\n                            rows=\"3\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"status\">Status</label>\n                        <select\n                            id=\"status\"\n                            value={formData.status}\n                            onChange={(e) => handleInputChange('status', e.target.value)}\n                            className=\"status-select\"\n                        >\n                            <option value=\"draft\">Draft</option>\n                            <option value=\"published\">Published</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// Simple Content Editor Component\nconst ContentEditor = ({ value, onChange, disabled }) => {\n    const [isPreview, setIsPreview] = useState(false);\n\n    const handleChange = (e) => {\n        if (!disabled) {\n            onChange(e.target.value);\n        }\n    };\n\n    const insertMarkdown = (before, after = '') => {\n        const textarea = document.getElementById('content-editor');\n        const start = textarea.selectionStart;\n        const end = textarea.selectionEnd;\n        const selectedText = value.substring(start, end);\n        const newText = value.substring(0, start) + before + selectedText + after + value.substring(end);\n        onChange(newText);\n        \n        // Restore cursor position\n        setTimeout(() => {\n            textarea.focus();\n            textarea.setSelectionRange(start + before.length, end + before.length);\n        }, 0);\n    };\n\n    const renderPreview = (content) => {\n        // Simple markdown-like rendering\n        return content\n            .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n            .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n            .replace(/^### (.*$)/gim, '<h3>$1</h3>')\n            .replace(/^## (.*$)/gim, '<h2>$1</h2>')\n            .replace(/^# (.*$)/gim, '<h1>$1</h1>')\n            .replace(/\\n/g, '<br>');\n    };\n\n    return (\n        <div className=\"content-editor\">\n            <div className=\"editor-toolbar\">\n                <button type=\"button\" onClick={() => insertMarkdown('**', '**')} title=\"Bold\">\n                    <strong>B</strong>\n                </button>\n                <button type=\"button\" onClick={() => insertMarkdown('*', '*')} title=\"Italic\">\n                    <em>I</em>\n                </button>\n                <button type=\"button\" onClick={() => insertMarkdown('# ')} title=\"Heading 1\">\n                    H1\n                </button>\n                <button type=\"button\" onClick={() => insertMarkdown('## ')} title=\"Heading 2\">\n                    H2\n                </button>\n                <button type=\"button\" onClick={() => insertMarkdown('### ')} title=\"Heading 3\">\n                    H3\n                </button>\n                <button type=\"button\" onClick={() => insertMarkdown('[', '](url)')} title=\"Link\">\n                    🔗\n                </button>\n                <button type=\"button\" onClick={() => insertMarkdown('![alt](', ')')} title=\"Image\">\n                    🖼️\n                </button>\n                <div className=\"toolbar-divider\"></div>\n                <button \n                    type=\"button\" \n                    className={isPreview ? 'active' : ''}\n                    onClick={() => setIsPreview(!isPreview)}\n                    title=\"Toggle Preview\"\n                >\n                    {isPreview ? '📝' : '👁️'}\n                </button>\n            </div>\n\n            {isPreview ? (\n                <div \n                    className=\"content-preview\"\n                    dangerouslySetInnerHTML={{ __html: renderPreview(value) }}\n                />\n            ) : (\n                <textarea\n                    id=\"content-editor\"\n                    value={value}\n                    onChange={handleChange}\n                    placeholder=\"Write your post content here... You can use Markdown formatting.\"\n                    className=\"content-textarea\"\n                    disabled={disabled}\n                    rows=\"20\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default BlogAdmin;"],"names":["supabaseUrl","supabaseAnonKey","supabase","createClient","BlogAdmin","user","session","authLoading","authReady","useAuth","posts","setPosts","useState","categories","setCategories","loading","setLoading","error","setError","showEditor","setShowEditor","editingPost","setEditingPost","stats","setStats","currentPage","setCurrentPage","totalPages","setTotalPages","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","sortBy","setSortBy","sortOrder","setSortOrder","isAdmin","setIsAdmin","checkingAdmin","setCheckingAdmin","adminChecked","setAdminChecked","selectedPosts","setSelectedPosts","showBulkActions","setShowBulkActions","refreshing","setRefreshing","autoRefresh","setAutoRefresh","lastRefresh","setLastRefresh","postAnalytics","setPostAnalytics","showAnalytics","setShowAnalytics","imageProcessor","ImageProcessor","checkAdminStatus","adminStatus","BlogAPI","loadInitialData","err","useEffect","updatePageTitle","updateMetaDescription","loadPosts","editPostId","handleEditPostById","categoriesData","statsData","categorySlug","cat","data","postsData","searchLower","post","a","b","aVal","bVal","handleCreatePost","handleEditPost","postId","handleDeletePost","prev","id","handleSelectPost","newSelected","handleSelectAll","allPostIds","handleBulkDelete","prevPosts","handleBulkStatusChange","newStatus","handleRefresh","interval","loadPostAnalytics","analytics","handleExportPosts","exportData","dataStr","dataBlob","url","link","handleDuplicatePost","duplicatedPost","handleTogglePublished","p","handleEditorClose","handleSearch","e","formatDate","dateString","formatTime","formatRelativeTime","now","date","diffInSeconds","jsxs","Fragment","jsx","Header","BlogEditor","category","field","order","sum","_","i","page","onClose","blogAPI","formData","setFormData","saving","setSaving","processingImages","setProcessingImages","slugManuallyEdited","setSlugManuallyEdited","autoSlug","handleInputChange","value","handleContentChange","content","processedContent","handleSave","publishNow","postData","tag","ContentEditor","onChange","disabled","isPreview","setIsPreview","handleChange","insertMarkdown","before","after","textarea","start","end","selectedText","newText"],"mappings":"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"}