import{a as T,b as A,c as F,A as $,u as t,d as I}from"./index-CKu1wh72.js";import{d as m,q as j,y as D}from"./react-vendor-BYlzYzcd.js";import{H}from"./Helmet-ZCbPJoEb.js";import{M as U}from"./MovieCard-DnFfwScB.js";const P=async(o,c=3,a=1e3)=>{for(let i=0;i<c;i++)try{const n=new Promise((g,p)=>{setTimeout(()=>p(new Error("Request timeout")),1e4)}),l=fetch(o,{headers:{Accept:"application/json","Content-Type":"application/json"}}),d=await Promise.race([l,n]);if(!d.ok)throw new Error(`HTTP ${d.status}: ${d.statusText}`);return d}catch(n){if(console.warn(`Fetch attempt ${i+1} failed for ${o}:`,n.message),i===c-1)throw n;await new Promise(l=>setTimeout(l,a*(i+1)))}},z=()=>{const{user:o}=T(),[c,a]=m([]),[i,n]=m(!0),[l,d]=m(null),{removeContinueWatchingItem:g,fetchContinueWatching:p}=A(),y=j(async()=>{if(!o){n(!1);return}n(!0),d(null);try{const s=await F(o.id);if(!s||s.length===0){a([]),n(!1);return}console.log("ðŸ“š Combined history data received:",{totalItems:s.length,itemsWithProgress:s.filter(r=>r.progress_seconds>0).length});const h=10;let _=[];for(let r=0;r<s.length;r+=h){const S=s.slice(r,r+h).map(async e=>{try{const u=e.media_id;if(!u)return console.warn(`Skipping item with invalid media_id: ${e.media_id}`),null;const b=await(await P(`${$}/tmdb/${e.media_type}/${u}`)).json(),f={...b,id:b.id,watch_id:`${e.user_id}-${e.media_id}-${e.media_type}-${e.season_number||0}-${e.episode_number||0}`,type:e.media_type,media_type:e.media_type,media_id:e.media_id,season_number:e.season_number,episode_number:e.episode_number,watched_at:e.watched_at,progress_seconds:e.progress_seconds,duration_seconds:e.duration_seconds};if(e.media_type==="tv"&&e.season_number&&e.episode_number)try{const w=await(await P(`${$}/tmdb/tv/${u}/season/${e.season_number}/episode/${e.episode_number}`)).json();return{...f,episode_name:w.name,still_path:w.still_path,episode_overview:w.overview}}catch(v){return console.error(`Error fetching episode details for ${u}:`,v),f}return f}catch(u){return console.error(`Error fetching details for ${e.media_type} ${e.media_id}:`,u),{id:e.media_id,watch_id:`${e.user_id}-${e.media_id}-${e.media_type}-${e.season_number||0}-${e.episode_number||0}`,type:e.media_type,media_type:e.media_type,media_id:e.media_id,season_number:e.season_number,episode_number:e.episode_number,watched_at:e.watched_at,title:e.media_type==="tv"?"Unknown TV Show":"Unknown Movie",name:e.media_type==="tv"?"Unknown TV Show":void 0,poster_path:null,overview:"Details could not be loaded.",_failed_to_load:!0,progress_seconds:e.progress_seconds,duration_seconds:e.duration_seconds}}}),k=await Promise.allSettled(S);_=_.concat(k);const C=_.filter(e=>e.status==="fulfilled"&&e.value).map(e=>e.value);a(C)}const E=_.filter(r=>r.status==="fulfilled"&&r.value).map(r=>r.value);a(E)}catch(s){console.error("Error fetching watch history:",s),d("Failed to load watch history. Please try again."),a([])}finally{n(!1)}},[o]);D(()=>{y()},[y,o]);const W=async s=>{a(c.filter(h=>h.watch_id!==s.watch_id)),g(s.media_id);try{await I(o.id,s),await p(o.id)}catch(h){console.error("Failed to delete item or refetch continue watching:",h)}},R=()=>{y()};return i?t("div",{class:"container",children:t("p",{children:"Loading watch history..."})}):l?t("div",{class:"container",children:[t(H,{children:t("title",{children:"Watch History - Fylm"})}),t("h1",{children:"Watch History"}),t("div",{class:"error-message",children:[t("p",{children:l}),t("button",{onClick:R,class:"retry-button",children:"Retry"})]})]}):t("div",{class:"container",children:[t(H,{children:t("title",{children:"Watch History - Fylm"})}),t("h1",{children:"Watch History"}),c.length>0?t("div",{class:"movie-grid",children:c.map(s=>t(U,{item:s,type:s.type,progress:s.progress_seconds,duration:s.duration_seconds,showDeleteButton:!0,onDelete:W},s.watch_id))}):t("p",{children:"Your watch history is empty."})]})};export{z as default};
//# sourceMappingURL=History-CD87sINY.js.map
